[{},{"attrs":{"title":"GitHub Pages Deployment","description":"How to deploy Nuxt.js app on GitHub Pages?"},"body":"<h1><a id=\"how-to-deploy-on-github-pages-\" class=\"anchor\" aria-hidden=\"true\" href=\"#how-to-deploy-on-github-pages-\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>How to deploy on GitHub Pages?</h1><p>Nuxt.js gives you the possibility to host your web application on any static hosting like <a href=\"https://pages.github.com/\">GitHub Pages</a> for example.</p>\n<p>To deploy on GitHub Pages, you need to generate your static web application:</p>\n<pre><code class=\"hljs bash\">npm run generate</code></pre><p>It will create a <code>dist</code> folder with everything inside ready to be deployed on GitHub Pages hosting. Branch <code>gh-pages</code> for project repository OR branch <code>master</code> for user or organization site</p>\n<div class=\"Alert Alert--nuxt-green\">\n\n<p><b>Info:</b> If you use a custom domain for your GitHub Pages and put <code>CNAME</code> file, it is recommended that CNAME file is put in the <code>static</code> directory. <a href=\"/guide/assets#static\">More documentation</a> about it.</p>\n</div>\n\n<h2><a id=\"deploying-to-github-pages-for-repository\" class=\"anchor\" aria-hidden=\"true\" href=\"#deploying-to-github-pages-for-repository\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Deploying to GitHub Pages for repository</h2><p>If you are creating GitHub Pages for one specific repository, and you don&#39;t have any custom domain, the URL of the page will be in this format: <code>http://&lt;username&gt;.github.io/&lt;repository-name&gt;</code>.</p>\n<p>If you deployed <code>dist</code> folder without adding <a href=\"https://nuxtjs.org/api/configuration-router/#base\">router base</a>, when you visit the deployed site you will find that the site is not working due to missing assets. This is because we assume that the website root will be <code>/</code>, but in this case it is <code>/&lt;repository-name&gt;</code>.</p>\n<p>To fix the issue we need to add <a href=\"https://nuxtjs.org/api/configuration-router/#base\">router base</a> configuration in <code>nuxt.config.js</code>:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">router</span>: {\n    <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">'/&lt;repository-name&gt;/'</span>\n  }\n}</code></pre><p>This way, all generated path asset will be prefixed with <code>/&lt;repository-name&gt;/</code>, and the next time you deploy the code to repository GitHub Pages, the site should be working properly.</p>\n<p>There is a downside adding <code>router.base</code> as the default setting in <code>nuxt.config.js</code> though, when you are running <code>npm run dev</code>, it won&#39;t be working properly since the base path changes. To fix this issue, we want to create a conditional for <code>router.base</code> whether to include <code>&lt;repository-name&gt;</code>:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-comment\">/* nuxt.config.js */</span>\n<span class=\"hljs-comment\">// only add `router.base = '/&lt;repository-name&gt;/'` if `DEPLOY_ENV` is `GH_PAGES`</span>\n<span class=\"hljs-keyword\">const</span> routerBase = process.env.DEPLOY_ENV === <span class=\"hljs-string\">'GH_PAGES'</span> ? {\n  <span class=\"hljs-attr\">router</span>: {\n    <span class=\"hljs-attr\">base</span>: <span class=\"hljs-string\">'/&lt;repository-name&gt;/'</span>\n  }\n} : {}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  ...routerBase\n}</code></pre><p>and now we just need to set <code>DEPLOY_ENV=&#39;GH_PAGES&#39;</code> to build the site for GitHub Pages:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-comment\">/* package.json */</span>\n<span class=\"hljs-string\">\"scripts\"</span>: {\n  <span class=\"hljs-string\">\"build:gh-pages\"</span>: <span class=\"hljs-string\">\"DEPLOY_ENV=GH_PAGES nuxt build\"</span>,\n  <span class=\"hljs-string\">\"generate:gh-pages\"</span>: <span class=\"hljs-string\">\"DEPLOY_ENV=GH_PAGES nuxt generate\"</span>\n},</code></pre><p>For Windows user, you might want to install <a href=\"https://github.com/kentcdodds/cross-env\">cross-env</a> if you are not using <code>bash</code></p>\n<pre><code class=\"hljs sh\">npm install cross-env --save-dev</code></pre><p>then use it this way:</p>\n<pre><code class=\"hljs js\">  <span class=\"hljs-string\">\"build:gh-pages\"</span>: <span class=\"hljs-string\">\"cross-env DEPLOY_ENV=GH_PAGES nuxt build\"</span>,\n  <span class=\"hljs-string\">\"generate:gh-pages\"</span>: <span class=\"hljs-string\">\"cross-env DEPLOY_ENV=GH_PAGES nuxt generate\"</span></code></pre><h2><a id=\"command-line-deployment\" class=\"anchor\" aria-hidden=\"true\" href=\"#command-line-deployment\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Command line deployment</h2><p>You can also use <a href=\"https://github.com/L33T-KR3W/push-dir\">push-dir package</a>:</p>\n<p>First install it via npm:</p>\n<pre><code class=\"hljs bash\">npm install push-dir --save-dev</code></pre><p>Add a <code>deploy</code> command to your <code>package.json</code> with the branch as <code>gh-pages</code> for project repository OR <code>master</code> for user or organization site.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">\"scripts\"</span>: {\n  <span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"nuxt\"</span>,\n  <span class=\"hljs-string\">\"build\"</span>: <span class=\"hljs-string\">\"nuxt build\"</span>,\n  <span class=\"hljs-string\">\"start\"</span>: <span class=\"hljs-string\">\"nuxt start\"</span>,\n  <span class=\"hljs-string\">\"generate\"</span>: <span class=\"hljs-string\">\"nuxt generate\"</span>,\n  <span class=\"hljs-string\">\"deploy\"</span>: <span class=\"hljs-string\">\"push-dir --dir=dist --branch=gh-pages --cleanup\"</span>\n},</code></pre><p>Then generate and deploy your static application:</p>\n<pre><code class=\"hljs bash\">npm run generate\nnpm run deploy</code></pre><h2><a id=\"build-server-deployment\" class=\"anchor\" aria-hidden=\"true\" href=\"#build-server-deployment\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Build server deployment</h2><p>You can take deployment one step further and rather than having to manually compile and deploy the files from your local install, you can make use of a build server to monitor your GitHub repository for new commits and then checkout, compile and deploy everything for you automatically.</p>\n<p>Before you configure the build server, you&#39;ll first need to <a href=\"https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/#creating-a-token\">generate a GitHub personal access token</a> in order to grant the build server permission to perform tasks on your behalf. Once you have created your token, keep a copy of it safe ready to use a little later on.</p>\n<h3><a id=\"travis-ci\" class=\"anchor\" aria-hidden=\"true\" href=\"#travis-ci\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Travis CI</h3><p>To deploy with <a href=\"https://travis-ci.org/\">Travis CI</a>, a free for open source projects build server, sign in via your GitHub account, granting Travis access to view your repositories, and then enable the build server for your repository by toggling the switch next to your repositories name in the list displayed.</p>\n<p><img src=\"/github_pages_travis_01.png\" alt=\"Travis Builder Server Enable\"></p>\n<p>Next, click the cog icon beside your repository name to configure the general settings of the build sever and enable the &#39;Build only if .travis.yml is present&#39; feature by toggling the switch.</p>\n<p><img src=\"/github_pages_travis_02.png\" alt=\"Travis Builder Server Settings\"></p>\n<p>On the same screen, scroll down to the Environment Variables section and create a new variables named <code>GITHUB_ACCESS_TOKEN</code> and in the value field paste a copy of the GitHub personal access token your created earlier and click the &#39;Add&#39; button.</p>\n<p><img src=\"/github_pages_travis_03.png\" alt=\"Travis Builder Server Environment Variables\"></p>\n<p>Finally, create a <code>.travis.yml</code> configuration file in the root of your repository with the following contents</p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">language:</span> <span class=\"hljs-string\">node_js</span>\n<span class=\"hljs-attr\">node_js:</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">\"8\"</span>\n\n<span class=\"hljs-attr\">cache:</span>\n<span class=\"hljs-attr\">  directories:</span>\n<span class=\"hljs-bullet\">    -</span> <span class=\"hljs-string\">\"node_modules\"</span>\n\n<span class=\"hljs-attr\">branches:</span>\n<span class=\"hljs-attr\">  only:</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">master</span>\n\n<span class=\"hljs-attr\">install:</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">generate</span>\n\n<span class=\"hljs-attr\">script:</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">\"Skipping tests\"</span>\n\n<span class=\"hljs-attr\">deploy:</span>\n<span class=\"hljs-attr\">  provider:</span> <span class=\"hljs-string\">pages</span>\n<span class=\"hljs-attr\">  skip-cleanup:</span> <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-attr\">  github-token:</span> <span class=\"hljs-string\">$GITHUB_ACCESS_TOKEN</span>  <span class=\"hljs-comment\"># Set in travis-ci.org dashboard, marked secure https://docs.travis-ci.com/user/deployment/pages/#Setting-the-GitHub-token</span>\n<span class=\"hljs-attr\">  target-branch:</span> <span class=\"hljs-string\">gh-pages</span>\n<span class=\"hljs-attr\">  local-dir:</span> <span class=\"hljs-string\">dist</span>\n<span class=\"hljs-attr\">  on:</span>\n<span class=\"hljs-attr\">    branch:</span> <span class=\"hljs-string\">master</span></code></pre><p>and then commit this to your repository</p>\n<pre><code class=\"hljs bash\">git add .travis.yml\ngit commit -m <span class=\"hljs-string\">\"Adding travis deploy configuration\"</span>\ngit push origin</code></pre><p>Now, whenever you commit any changes to your repository, from within Travis, you&#39;ll see a new build start up</p>\n<p><img src=\"/github_pages_travis_04.png\" alt=\"Travis Builder Server Output\"></p>\n<p>and on completion, you&#39;ll see your GitHub pages site automatically updated.</p>\n<h3><a id=\"appveyor\" class=\"anchor\" aria-hidden=\"true\" href=\"#appveyor\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Appveyor</h3><p>To deploy via <a href=\"https://www.appveyor.com\">Appveyor</a>, another free for open source projects build server, sign up for a new account choosing the GitHub authentication option to sign in using your GitHub account.</p>\n<p>Once signed in, click the &#39;New project&#39; link and then click the &#39;Add&#39; button beside your repository name in the list displayed to enable the build server on your repository.</p>\n<p><img src=\"/github_pages_appveyor_01.png\" alt=\"Appveyor Builder Server Enable\"></p>\n<p>Next, in the root of your repository, create an <code>appveyor.yml</code> configuration file with the following contents</p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">environment:</span>\n  <span class=\"hljs-comment\"># Nuxt requires node v8 minimum</span>\n<span class=\"hljs-attr\">  nodejs_version:</span> <span class=\"hljs-string\">\"8\"</span>\n  <span class=\"hljs-comment\"># Encrypt sensitive data (https://ci.appveyor.com/tools/encrypt)</span>\n<span class=\"hljs-attr\">  github_access_token:</span>\n<span class=\"hljs-attr\">    secure:</span> <span class=\"hljs-string\">ENCRYPTED_GITHUB_ACCESS_TOKEN</span>\n<span class=\"hljs-attr\">  github_email:</span>\n<span class=\"hljs-attr\">    secure:</span> <span class=\"hljs-string\">ENCRYPTED_GITHUB_EMAIL</span>\n\n<span class=\"hljs-comment\"># Only run on master branch</span>\n<span class=\"hljs-attr\">branches:</span>\n<span class=\"hljs-attr\">  only:</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">master</span>\n\n<span class=\"hljs-comment\"># Install scripts. (runs after repo cloning)</span>\n<span class=\"hljs-attr\">install:</span>\n  <span class=\"hljs-comment\"># switch nodejs version</span>\n<span class=\"hljs-attr\">  - ps:</span> <span class=\"hljs-string\">Install-Product</span> <span class=\"hljs-string\">node</span> <span class=\"hljs-string\">$env:nodejs_version</span>\n  <span class=\"hljs-comment\"># install modules</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span>\n  <span class=\"hljs-comment\"># generate static files</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">generate</span>\n  <span class=\"hljs-comment\"># configure global git credentials store (https://www.appveyor.com/docs/how-to/git-push/)</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-bullet\">--global</span> <span class=\"hljs-string\">credential.helper</span> <span class=\"hljs-string\">store</span>\n<span class=\"hljs-attr\">  - ps:</span> <span class=\"hljs-string\">Add-Content</span> <span class=\"hljs-string\">\"$env:USERPROFILE\\.git-credentials\"</span> <span class=\"hljs-string\">\"https://$($env:github_access_token):x-oauth-basic@github.com`n\"</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">git</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-bullet\">--global</span> <span class=\"hljs-string\">user.email</span> <span class=\"hljs-string\">$env:github_email</span>\n  <span class=\"hljs-comment\"># deploy to GitHub pages</span>\n<span class=\"hljs-bullet\">  -</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">deploy</span>\n\n<span class=\"hljs-comment\"># No tests to run</span>\n<span class=\"hljs-attr\">test:</span> <span class=\"hljs-string\">off</span>\n\n<span class=\"hljs-comment\"># Don't actually build.</span>\n<span class=\"hljs-attr\">build:</span> <span class=\"hljs-string\">off</span></code></pre><p><strong><em>NB</em></strong> This configuration assumes you&#39;ve configured your <code>package.json</code> file as per the <a href=\"#command-line-deployment\">Command line deployment</a> instructions</p>\n<p>Before you commit this file however, you&#39;ll need to change the <code>ENCRYPTED_GITHUB_ACCESS_TOKEN</code> and <code>ENCRYPTED_GITHUB_EMAIL</code> variables with your GitHub personal access token from earlier and your GitHub email address, encrypted using the <a href=\"https://ci.appveyor.com/tools/encrypt\">Appveyor encryption tool</a>.</p>\n<p>Once updated, commit the file to your repository</p>\n<pre><code class=\"hljs bash\">git add appveyor.yml\ngit commit -m <span class=\"hljs-string\">\"Adding appveyor deploy configuration\"</span>\ngit push origin</code></pre><p>Now, whenever you commit any changes to your repository, from within Appveyor, you&#39;ll see a new build start up</p>\n<p><img src=\"/github_pages_appveyor_02.png\" alt=\"Appveyor Builder Server Output\"></p>\n<p>and on completion, you&#39;ll see your GitHub pages site automatically updated.</p>\n","docLink":"https://github.com/nuxt/docs/blob/master/en/faq/github-pages.md"}]