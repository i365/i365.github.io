window.__NUXT__=function(e,n,t,s,a,o,i,l,r,c,p,d,u,m,h,g,f,y,j,w,b,v,k,x,S,V,_,C,H,T,A,P,N,I,D,E,z,R,M,F){return{layout:"default",data:[{},{attrs:{title:a,description:"Nuxt.js allows you to define JavaScript plugins to be run before instantiating the root Vue.js Application. This is especially helpful when using your own libraries or external modules."},body:'<blockquote>\n<p>Nuxt.js allows you to define JavaScript plugins to be run before instantiating the root Vue.js Application. This is especially helpful when using your own libraries or external modules.</p>\n</blockquote>\n<div class="Alert">\n\n<p>It is important to know that in any Vue <a href="https://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram">instance lifecycle</a>, only <code>beforeCreate</code> and <code>created</code> hooks are called <strong>both, from client-side and server-side</strong>. All other hooks are called only from the client-side.</p>\n</div>\n\n<h2><a id="external-packages" class="anchor" aria-hidden="true" href="#external-packages"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>External Packages</h2><p>We may want to use external packages/modules in our application (one great example is <a href="https://github.com/mzabriskie/axios">axios</a>) for making HTTP request for both server and client.</p>\n<p>First, we should install it via npm:</p>\n<pre><code class="hljs bash">npm install --save axios</code></pre><p>Then we can use it directly in our page components:</p>\n<pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>{{ title }}<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">\'axios\'</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-keyword">async</span> asyncData ({ params }) {\n    <span class="hljs-keyword">let</span> { data } = <span class="hljs-keyword">await</span> axios.get(<span class="hljs-string">`https://my-api/posts/<span class="hljs-subst">${params.id}</span>`</span>)\n    <span class="hljs-keyword">return</span> { <span class="hljs-attr">title</span>: data.title }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2><a id="vue-plugins" class="anchor" aria-hidden="true" href="#vue-plugins"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Vue Plugins</h2><p>If we want to use Vue plugins, like <a href="https://github.com/se-panfilov/vue-notifications">vue-notifications</a> to display notification in our application, we need to setup the plugin before launching the app.</p>\n<p>We create the file <code>plugins/vue-notifications.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> VueNotifications <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue-notifications\'</span>\n\nVue.use(VueNotifications)</code></pre><p>Then we add the file path inside the <code>plugins</code> key of our <code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [<span class="hljs-string">\'~/plugins/vue-notifications\'</span>]\n}</code></pre><p>To learn more about the <code>plugins</code> configuration key, check out the <a href="/api/configuration-plugins">plugins api</a>.</p>\n<h3><a id="es6-plugins" class="anchor" aria-hidden="true" href="#es6-plugins"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>ES6 plugins</h3><p>If the plugin is located in <code>node_modules</code> and exports an ES6 module, you may need to add it to the <code>transpile</code> build option:</p>\n<pre><code class="hljs js"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">build</span>: {\n    <span class="hljs-attr">transpile</span>: [<span class="hljs-string">\'vue-notifications\'</span>]\n  }\n}</code></pre><p>You can refer to the <a href="/api/configuration-build/#transpile">configuration build</a> docs for more build options.</p>\n<h2><a id="inject-in-root-amp-context" class="anchor" aria-hidden="true" href="#inject-in-root-amp-context"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Inject in $root &amp; context</h2><p>Sometimes you want to make functions or values available across the app.\nYou can inject those variables into Vue instances (client side), the context (server side) and even in the Vuex store.\nIt is a convention to prefix those functions with a <code>$</code>.</p>\n<h3><a id="inject-into-vue-instances" class="anchor" aria-hidden="true" href="#inject-into-vue-instances"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Inject into Vue instances</h3><p>Injecting context into Vue instances works similar to when doing this in standard Vue apps.</p>\n<p><code>plugins/vue-inject.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n\nVue.prototype.$myInjectedFunction = <span class="hljs-function">(<span class="hljs-params">string</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"This is an example"</span>, string)</code></pre><p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [<span class="hljs-string">\'~/plugins/vue-inject.js\'</span>]\n}</code></pre><p>You can now use the function in all your Vue components.</p>\n<p><code>example-component.vue</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  mounted(){\n    <span class="hljs-keyword">this</span>.$myInjectedFunction(<span class="hljs-string">\'test\'</span>)\n  }\n}</code></pre><h3><a id="inject-into-context" class="anchor" aria-hidden="true" href="#inject-into-context"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Inject into context</h3><p>Injecting context into Vue instances works similar to when doing this in standard Vue apps.</p>\n<p><code>plugins/ctx-inject.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> ({ app }, inject) =&gt; {\n  <span class="hljs-comment">// Set the function directly on the context.app object</span>\n  app.myInjectedFunction = <span class="hljs-function">(<span class="hljs-params">string</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Okay, another function\'</span>, string)\n}</code></pre><p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [<span class="hljs-string">\'~/plugins/ctx-inject.js\'</span>]\n}</code></pre><p>The function is now available whenever you have access to the <code>context</code> (for example in <code>asyncData</code> and <code>fetch</code>).</p>\n<p><code>ctx-example-component.vue</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  asyncData(context){\n    context.app.myInjectedFunction(<span class="hljs-string">\'ctx!\'</span>)\n  }\n}</code></pre><h3><a id="combined-inject" class="anchor" aria-hidden="true" href="#combined-inject"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Combined inject</h3><p>If you need the function in the <code>context</code>, Vue instances and maybe even in the Vuex store, you can use the <code>inject</code> function, which is the second parameter of the plugins exported function.</p>\n<p>Injecting content into Vue instances works similar to when doing this in standard Vue apps. The <code>$</code> will be prepended automatically to the function.</p>\n<p><code>plugins/combined-inject.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> ({ app }, inject) =&gt; {\n  inject(<span class="hljs-string">\'myInjectedFunction\'</span>, (string) =&gt; <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'That was easy!\'</span>, string))\n}</code></pre><p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [<span class="hljs-string">\'~/plugins/combined-inject.js\'</span>]\n}</code></pre><p>Now the function can be used from <code>context</code>, via <code>this</code> in Vue instances and via <code>this</code> in store <code>actions</code>/<code>mutations</code>.</p>\n<p><code>ctx-example-component.vue</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  mounted(){\n    <span class="hljs-keyword">this</span>.$myInjectedFunction(<span class="hljs-string">\'works in mounted\'</span>)\n  },\n  asyncData(context){\n    context.app.$myInjectedFunction(<span class="hljs-string">\'works with context\'</span>)\n  }\n}</code></pre><p><code>store/index.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> state = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> ({\n  <span class="hljs-attr">someValue</span>: <span class="hljs-string">\'\'</span>\n})\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> mutations = {\n  changeSomeValue(state, newValue) {\n    <span class="hljs-keyword">this</span>.$myInjectedFunction(<span class="hljs-string">\'accessible in mutations\'</span>)\n    state.someValue = newValue\n  }\n}\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> actions = {\n  setSomeValueToWhatever ({ commit }) {\n    <span class="hljs-keyword">this</span>.$myInjectedFunction(<span class="hljs-string">\'accessible in actions\'</span>)\n    <span class="hljs-keyword">const</span> newValue = <span class="hljs-string">"whatever"</span>\n    commit(<span class="hljs-string">\'changeSomeValue\'</span>, newValue)\n  }\n}\n</code></pre><h2><a id="client-side-only" class="anchor" aria-hidden="true" href="#client-side-only"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Client-side only</h2><p>Some plugins might work <strong>only in the browser</strong> because they lack SSR support.\nIn these situations you can use the <code>ssr: false</code> option in <code>plugins</code> to add the plugin only on the client-side.</p>\n<p>Example:</p>\n<p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    { <span class="hljs-attr">src</span>: <span class="hljs-string">\'~/plugins/vue-notifications\'</span>, <span class="hljs-attr">ssr</span>: <span class="hljs-literal">false</span> }\n  ]\n}</code></pre><p><code>plugins/vue-notifications.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> VueNotifications <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue-notifications\'</span>\n\nVue.use(VueNotifications)</code></pre><p>In case you need to import some libraries in a plugin only on <em>server-side</em>, you can check if the <code>process.server</code> variable is set to <code>true</code>.</p>\n<p>Also, if you need to know if you are inside a generated app (via <code>nuxt generate</code>), you can check if <code>process.static</code> is set to <code>true</code>. This is only the case during and after the generation.</p>\n<p>You can also combine both options to hit the spot when a page is being server-rendered by <code>nuxt generate</code> before being saved (<code>process.static &amp;&amp; process.server</code>).</p>\n<p><strong>Note</strong>: Since Nuxt.js 2.4, <code>mode</code> has been introduced as option of <code>plugins</code> to specify plugin type, possible value are: <code>client</code> or <code>server</code>. <code>ssr: false</code> will be adapted to <code>mode: &#39;client&#39;</code> and deprecated in next major release.</p>\n<p>Example:</p>\n<p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    { <span class="hljs-attr">src</span>: <span class="hljs-string">\'~/plugins/both-sides.js\'</span> },\n    { <span class="hljs-attr">src</span>: <span class="hljs-string">\'~/plugins/client-only.js\'</span>, <span class="hljs-attr">mode</span>: <span class="hljs-string">\'client\'</span> },\n    { <span class="hljs-attr">src</span>: <span class="hljs-string">\'~/plugins/server-only.js\'</span>, <span class="hljs-attr">mode</span>: <span class="hljs-string">\'server\'</span> }\n  ]\n}</code></pre><h3><a id="name-conventional-plugin" class="anchor" aria-hidden="true" href="#name-conventional-plugin"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Name conventional plugin</h3><p>If plugin is assumed to be run only in client or server side, <code>.client.js</code> or <code>.server.js</code> can be applied as extension of plugin file, the file will be automatically included in corresponding side.</p>\n<p>Example:</p>\n<p><code>nuxt.config.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-string">\'~/plugins/foo.client.js\'</span>, <span class="hljs-comment">// only in client side</span>\n    <span class="hljs-string">\'~/plugins/bar.server.js\'</span>, <span class="hljs-comment">// only in server side</span>\n    <span class="hljs-string">\'~/plugins/baz.js\'</span> <span class="hljs-comment">// both client &amp; server</span>\n  ]\n}</code></pre>',docLink:"https://github.com/nuxt/docs/blob/master/en/guide/plugins.md"}],error:null,state:{filled:e,docVersion:z,ghVersion:"v2.8.1",visibleHeader:!1,visibleAffix:!1,locale:"en",lang:{iso:"en",docVersion:z,links:{api:"API",blog:"Blog",chat:"Chat",documentation:"Documentation",download:"Download",examples:"Examples",ecosystem:"Ecosystem",faq:"FAQ",get_started:"get started",github:"GitHub",guide:"Guide",homepage:"Home page",live_demo:"Live Demo",live_edit:"Live Edit",tidelift_short:"GET PROFESSIONAL SUPPORT",official_support:"GET OFFICIAL SUPPORT ⛑",tidelift:"GET PROFESSIONAL SUPPORT FOR NUXT",twitter:"Twitter",vuejs:"Vue.js",vue_jobs:"Vue Jobs"},text:{an_error_occurred:"An error occurred",api_page_not_found:"API page not found",example_file:"Example Files",please_wait:"Please wait...",please_define_title:"Please define a title in the front matter",please_define_description:"Please define a description in the front matter",search:"Search",version:"Version"},homepage:{title:"The Vue.js Framework",meta:{title:"Nuxt.js - The Vue.js Framework",description:"Nuxt.js presets all the configuration needed to make your development of a Vue.js application enjoyable. Nuxt.js can produce Universal, Single Page and Static Generated Applications."},welcome:{app_types_prefix:"For ",app_types:["Universal Applications","Static Generated Applications","Single Page Applications","Desktop Applications","Mobile Applications","Progressive Web Apps"],app_types_suffix:"."},codesandbox_title:"Play with Nuxt.js online",codesandbox_open:"Open on CodeSandBox.io",codesandbox_examples:"See more examples",backer_partners:"Partners",backer_become_a_partner:"Become A Partner",backer_sponsors:v,backer_become_a_sponsor:"Become A Sponsor",backer_backers:"Backers",backer_become_a_backer:"Become A Backer",backer_foundations:"Foundations"},sponsors:{title:v,become:"Support us and",become_partner:"become a partner"},footer:{authors:"Made by Chopin Brothers"},guide:{release_notes:b,contribute:"Caught a mistake or want to contribute to the documentation?",edit_on_github:"Edit this page on GitHub!"},examples:{source_code:"Source Code"}},menu:{api:[{title:"Essential",links:[{name:"Context",to:"/context"}]},{title:u,links:[{name:"asyncData",to:"/"},{name:"fetch",to:"/pages-fetch"},{name:c,to:"/pages-head"},{name:"key",to:"/pages-key"},{name:"layout",to:"/pages-layout"},{name:S,to:"/pages-loading"},{name:p,to:"/pages-middleware"},{name:"scrollToTop",to:"/pages-scrolltotop"},{name:d,to:"/pages-transition",contents:[{name:"String",to:"#string"},{name:"Object",to:"#object"},{name:"Function",to:"#function"}]},{name:"validate",to:"/pages-validate"},{name:"watchQuery",to:"/pages-watchquery"}]},{title:"Components",links:[{name:"nuxt",to:"/components-nuxt"},{name:"nuxt-child",to:"/components-nuxt-child"},{name:"nuxt-link",to:"/components-nuxt-link"},{name:"no-ssr",to:"/components-no-ssr"}]},{title:"Utils",links:[{name:"$nuxt",to:"/$nuxt"}]},{title:l,links:[{name:"build",to:"/configuration-build",contents:[{name:"analyze",to:"#analyze"},{name:"babel",to:"#babel"},{name:"cache",to:"#cache"},{name:"crossorigin",to:"#crossorigin"},{name:"cssSourceMap",to:"#csssourcemap"},{name:"devMiddleware",to:"#devmiddleware"},{name:m,to:h},{name:"extend",to:"#extend"},{name:"extractCSS",to:"#extractcss"},{name:"filenames",to:"#filenames"},{name:"friendlyErrors",to:"#friendlyerrors"},{name:"hardSource",to:"#hardsource"},{name:"hotMiddleware",to:"#hotmiddleware"},{name:"html.minify",to:"#html-minify"},{name:"indicator",to:"#indicator"},{name:"loaders",to:"#loaders"},{name:"optimization",to:"#optimization"},{name:"optimizeCSS",to:"#optimizecss"},{name:"parallel",to:"#parallel"},{name:g,to:"#plugins"},{name:"postcss",to:"#postcss"},{name:"profile",to:"#profile"},{name:"publicPath",to:"#publicpath"},{name:"quiet",to:"#quiet"},{name:"splitChunks",to:"#splitchunks"},{name:"ssr",to:y},{name:"styleResources",to:"#styleresources"},{name:"templates",to:"#templates"},{name:"terser",to:"#terser"},{name:"transpile",to:"#transpile"},{name:"typescript",to:"#typescript"},{name:"vueLoader",to:"#vueloader"},{name:j,to:"#watch"}]},{name:"buildDir",to:"/configuration-builddir"},{name:"css",to:"/configuration-css"},{name:"dev",to:"/configuration-dev"},{name:"env",to:"/configuration-env"},{name:"generate",to:"/configuration-generate",contents:[{name:"dir",to:"#dir"},{name:m,to:h},{name:t,to:o},{name:"interval",to:"#interval"},{name:"minify",to:"#minify"},{name:"routes",to:"#routes"},{name:"subFolders",to:"#subfolders"},{name:"concurrency",to:"#concurrency"}]},{name:c,to:"/configuration-head"},{name:"hooks",to:"/configuration-hooks"},{name:"ignore",to:"/configuration-ignore"},{name:S,to:"/configuration-loading",contents:[{name:"Disable the Progress Bar",to:"#disable-the-progress-bar"},{name:"Customize the Progress Bar",to:"#customize-the-progress-bar"},{name:"Use a Custom Loading Component",to:"#use-a-custom-loading-component"},{name:"Internals of the Progress Bar",to:"#internals-of-the-progress-bar"}]},{name:"loadingIndicator",to:"/configuration-loading-indicator"},{name:k,to:"/configuration-mode"},{name:"modern",to:"/configuration-modern"},{name:"modules",to:"/configuration-modules"},{name:"modulesDir",to:"/configuration-modulesdir"},{name:g,to:"/configuration-plugins"},{name:x,to:"/configuration-render",contents:[{name:"bundleRenderer",to:"#bundlerenderer"},{name:"etag",to:"#etag"},{name:"compressor",to:"#compressor"},{name:t,to:o},{name:"http2",to:"#http2"},{name:"injectScripts",to:"#injectscripts"},{name:"resourceHints",to:"#resourcehints"},{name:"ssr",to:y},{name:"ssrLog",to:"#ssrlog"},{name:"static",to:r},{name:"dist",to:"#dist"},{name:"csp",to:"#csp"}]},{name:"rootDir",to:"/configuration-rootdir"},{name:"router",to:"/configuration-router",contents:[{name:"base",to:"#base"},{name:"routeNameSplitter",to:"#routenamesplitter"},{name:"extendRoutes",to:"#extendroutes"},{name:t,to:o},{name:"linkActiveClass",to:"#linkactiveclass"},{name:"linkExactActiveClass",to:"#linkexactactiveclass"},{name:"linkPrefetchedClass",to:"#linkprefetchedclass"},{name:p,to:V},{name:k,to:"#mode"},{name:"parseQuery / stringifyQuery",to:"#parsequery-stringifyquery"},{name:"prefetchLinks",to:"#prefetchlinks"},{name:"scrollBehavior",to:"#scrollbehavior"}]},{name:"server",to:"/configuration-server"},{name:"serverMiddleware",to:"/configuration-servermiddleware"},{name:"srcDir",to:"/configuration-srcdir"},{name:"dir",to:"/configuration-dir"},{name:d,to:"/configuration-transition"},{name:"vue.config",to:"/configuration-vue-config"},{name:j,to:"/configuration-watch"},{name:"globalName",to:"/configuration-global-name"},{name:"watchers",to:"/configuration-watchers",contents:[{name:"chokidar",to:"#chokidar"},{name:"webpack",to:_}]}]},{title:"Programmatically",links:[{name:"Usage",to:"/nuxt"},{name:x,to:"/nuxt-render"},{name:"renderRoute",to:"/nuxt-render-route"},{name:"renderAndGetWindow",to:"/nuxt-render-and-get-window"}]},{title:"Internals",links:[{name:"Intro",to:"/internals"},{name:"Nuxt",to:"/internals-nuxt"},{name:"Renderer",to:"/internals-renderer"},{name:"Module Container",to:"/internals-module-container"},{name:"Builder",to:"/internals-builder"},{name:"Generator",to:"/internals-generator"}]}],examples:[{title:"Essentials",links:[{name:C,to:""},{name:"SEO HTML Head",to:"/seo-html-head"}]},{title:"Customization",links:[{name:"Custom Loading",to:"/custom-loading"},{name:"Custom Page Loading",to:"/custom-page-loading"},{name:"Custom Routes",to:"/custom-routes"},{name:"Global CSS",to:"/global-css"},{name:T,to:"/layouts"},{name:A,to:"/middleware"},{name:P,to:"/named-views"},{name:N,to:"/nested-routes"},{name:a,to:I},{name:"Routes transitions",to:"/routes-transitions"}]},{title:"Advanced",links:[{name:D,to:E},{name:"Auth Routes",to:"/auth-routes"},{name:"Auth External API (JWT)",to:"/auth-external-jwt"},{name:i,to:R},{name:"i18n",to:"/i18n"},{name:"Testing",to:"/testing"}]},{title:"TypeScript",links:[{name:C,to:M},{name:i,to:"/typescript-vuex"}]}],guide:[{title:"Prologue",links:[{to:"",name:F,contents:[{to:"#what-is-nuxt-js-",name:"What is Nuxt.js?"},{to:"#how-it-works",name:"How it Works"},{to:"#features",name:"Features"},{to:"#schema",name:"Schema"},{to:"#server-rendered-universal-ssr-",name:"Server Rendered"},{to:"#single-page-applications-spa-",name:"Single Page Application"},{to:"#static-generated-pre-rendering-",name:"Static Generated"}]},{to:"/contribution-guide",name:"Contribution Guide"},{to:"/release-notes",name:b}]},{title:"Getting Started",links:[{to:"/installation",name:"Installation",contents:[{to:"#using-nuxt-js-starter-template",name:"Using Nuxt.js starter template"},{to:"#starting-from-scratch",name:"Starting from scratch"}]},{to:"/directory-structure",name:"Directory Structure",contents:[{to:"#directories",name:"Directories"},{to:"#aliases",name:"Aliases"}]},{to:"/configuration",name:l},{to:"/routing",name:"Routing",contents:[{to:"#basic-routes",name:"Basic Routes"},{to:"#dynamic-routes",name:"Dynamic Routes"},{to:"#nested-routes",name:N},{to:"#dynamic-nested-routes",name:"Dynamic Nested Routes"},{to:"#named-views",name:P},{to:"#transitions",name:"Transitions"},{to:V,name:A}]},{to:"/views",name:"Views",contents:[{to:"#document",name:"Document"},{to:"#layouts",name:T},{to:"#pages",name:u},{to:"#html-head",name:"HTML Head"}]},{to:E,name:D,contents:[{to:"#the-asyncdata-method",name:"The asyncData Method"},{to:"#the-context",name:"The Context"},{to:"#handling-errors",name:"Handling Errors"}]},{to:"/assets",name:"Assets",contents:[{to:_,name:"Webpack"},{to:r,name:"Static"}]},{to:I,name:a,contents:[{to:"#external-packages",name:"External Packages"},{to:"#vue-plugins",name:"Vue Plugins"},{to:"#inject-in-root-amp-context",name:"Inject in $root & context"},{to:"#client-side-only",name:"Client-side only"}]},{to:"/modules",name:"Modules",contents:[{to:"#introduction",name:F},{to:"#list-of-nuxt-js-modules",name:"List of Nuxt.js modules"},{to:"#write-a-basic-module",name:"Write a basic Module"},{to:"#async-modules",name:"Async Modules"},{to:"#common-snippets",name:"Common Snippets"},{to:"#run-tasks-on-specific-hooks",name:"Run Tasks on Specific hooks"},{to:"#module-package-commands",name:"Module package commands"}]},{to:R,name:i,contents:[{to:"#activate-the-store",name:"Activate the Store"},{to:"#modules-mode",name:"Modules mode"},{to:"#the-fetch-method",name:"The fetch Method"},{to:"#the-nuxtserverinit-action",name:"The nuxtServerInit Action"},{to:"#classic-mode",name:"Classic mode"}]},{to:M,name:"TypeScript Support",contents:[{to:"#get-started",name:"Get started"},{to:"#from-javascript-to-typescript",name:"From JavaScript to TypeScript"},{to:"#linting-with-eslint",name:"Linting with ESLint"}]},{to:"/commands",name:"Commands and Deployment",contents:[{to:"#list-of-commands",name:"List of Commands"},{to:"#development-environment",name:"Development Enviroment"},{to:"#production-deployment",name:"Production Deployment"}]},{to:"/development-tools",name:"Development Tools",contents:[{to:"#end-to-end-testing",name:"End-to-End Testing"},{to:"#eslint-and-prettier",name:"ESLint and Prettier"}]}]}],faq:[{title:l,links:[{name:"How to use external resources?",to:""},{name:"How to use pre-processors?",to:"/pre-processors"},{name:"How to use JSX?",to:"/jsx"},{name:"How to add PostCSS plugins?",to:"/postcss-plugins"},{name:"How to extend webpack config?",to:"/extend-webpack"},{name:"How to add webpack plugins?",to:"/webpack-plugins"},{name:"How to edit HOST and PORT?",to:"/host-port"},{name:"How to use cached components?",to:"/cached-components"},{name:"How to use Google Analytics?",to:"/google-analytics"},{name:"How to share cross origin resource?",to:"/http-proxy"},{name:"How to extend Webpack config to load audio files?",to:"/webpack-audio-files"}]},{title:"Development",links:[{name:"window/document undefined?",to:"/window-document-undefined"},{name:"Why a CSS Flash appears?",to:"/css-flash"},{name:"Async data in components?",to:"/async-data-components"},{name:"Duplicated Meta Tags?",to:"/duplicated-meta-tags"},{name:"iOS and phone numbers",to:"/ios-phone-numbers"}]},{title:"Deployment",links:[{name:"Deploy on AWS w/ S3 and Cloudfront",to:"/deployment-aws-s3-cloudfront"},{name:"Deploy on Azure Portal",to:"/deployment-azure-portal"},{name:"Deploy on Dokku",to:"/dokku-deployment"},{name:"Deploy on GitHub",to:"/github-pages"},{name:"Deploy on Google App Engine",to:"/appengine-deployment"},{name:"Deploy on Heroku",to:"/heroku-deployment"},{name:"Deploy on Netlify",to:"/netlify-deployment"},{name:"Deploy on Now",to:"/now-deployment"},{name:"Deploy on Surge",to:"/surge-deployment"},{name:"Using nginx as a proxy",to:"/nginx-proxy"}]}]},homepage:{backers:{attrs:{title:"Support the Team",fallback:e},body:"Nuxt.js is an MIT licensed open source project and completely free to use. However, the amount of effort needed to maintain and develop new features for the project is not sustainable without proper financial backing. Your donations directly support office hours, continued enhancements, and most importantly, great documentation and learning material.<br>"},modes_server_side_rendering:{attrs:{title:"Server Side Rendered",content_title:"Server Side Rendered (Universal)",fallback:e},body:"The most popular mode for Nuxt. With SSR, also called &quot;universal&quot; or &quot;isomorphic&quot; mode, a Node.js server\nwill be used to deliver HTML based on your Vue components to the client instead of the pure javascript.\nUsing SSR will lead to a large SEO boost, better UX and more opportunities (compared to a traditional Vue SPA).<br><br>\nBecause implementing SSR on your own can be really tedious, Nuxt.js gives you full support out of the box\nand will take care of common pitfalls.<br>"},index:{attrs:{fallback:e},body:""},modes_single_page_app:{attrs:{title:"Single Page App",content_title:"Single Page Application (SPA)",fallback:e},body:"Don&#39;t need SSR or Static Site Generation but still want to profit from the benefits that Nuxt provides?\nAre you slowly transitioning your app and want to start lightweight? Then the traditional SPA mode will\nlikely be your choice.\nThe outcome will be a typical Vue SPA as you know it but influenced by your Nuxt configuration and the\nframework itself.<br>"},modes_statically_generated:{attrs:{title:"Statically Generated",content_title:"Statically Generated (Pre-Rendering)",fallback:e},body:'Static Site Generation is a very hot topic right now! Instead of switching to another framework and\nspending time to get used to it, why not killing two birds with one stone?\n<span style="color: #777">(only proverbial 🐦🐦)</span><br><br>\nNuxt.js supports generating a static website based on your Vue application. It is the &quot;best of both worlds&quot;\nas you don&#39;t need a server but still have SEO benefits because Nuxt will pre-render all pages and include\nthe necessary HTML. Also, you can deploy the resulting page easily to Netlify or GitHub pages.<br>'},modes:{attrs:{title:"Rendering modes",fallback:e},body:"NO CONTENTS<br>"},welcome_figure:{attrs:{title:"Welcome figure - video",fallback:e},body:'Video produced by <a href="https://www.vuemastery.com" target="_blank" rel="noopener">Vue Mastery</a>, download their free <a href="https://www.vuemastery.com/nuxt-cheat-sheet/" target="_blank" rel="noopener">Nuxt Cheat Sheet</a>.<br>'},welcome:{attrs:{title:'The <span class="nWelcome_Content_Title_Primary">Vue.js</span> Framework',fallback:e},body:"Nuxt.js presets all the configuration needed to make your development of a Vue.js application enjoyable.<br>"},why_enjoyable:{attrs:{title:"Enjoyable",fallback:e},body:"Our main focus is the Developer Experience. We love Nuxt.js and continuously improve the framework so you love it too! 💚<br>Expect appealing solutions, descriptive error messages, powerful defaults and detailed documentation. If questions or problems come up, our helpful community will help you out.<br>"},why_modular:{attrs:{title:"Modular",fallback:e},body:"Nuxt is based on a powerful modular architecture. You can choose from more than 50 modules to make your development faster and easier. You don&#39;t have to reinvent the wheel to get PWA benefits, add Google Analytics to your page or generate a sitemap.<br>"},why_performant:{attrs:{title:"Performant",fallback:e},body:"With Nuxt.js, your application will be optimized out of the box.\nWe do our best to build performant applications by utilizing Vue.js and Node.js best practices.\nTo squeeze every unnecessary bit out of your app Nuxt includes a bundle analyzer and lots of opportunities to fine-tune your app.<br>"},why:{attrs:{title:"Why Nuxt?",fallback:e},body:""}},adBlocked:!1},serverRendered:e}}(!0,0,"fallback",0,"Plugins","#fallback","Vuex Store","Configuration","#static","head","middleware","transition","Pages","devtools","#devtools","plugins",0,"#ssr","watch",0,"Release Notes","Sponsors","mode","render","loading","#middleware","#webpack","Hello World",0,"Layouts","Middleware","Named Views","Nested Routes","/plugins","Async Data","/async-data","2.8.X","/vuex-store","/typescript","Introduction")