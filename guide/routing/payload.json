[{},{"attrs":{"title":"Routing","description":"Nuxt.js use the file-system to generate the routes of your web applications."},"body":"<blockquote>\n<p>Nuxt.js automatically generates the <a href=\"https://github.com/vuejs/vue-router\">vue-router</a> configuration based on your file tree of Vue files inside the <code>pages</code> directory.</p>\n</blockquote>\n<div class=\"Alert Alert--grey\">\n\n<p>To navigate between pages, we recommend to use the <a href=\"/api/components-nuxt-link\"><code>&lt;nuxt-link&gt;</code></a> component.</p>\n</div>\n\n<p>For example:</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">nuxt-link</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/\"</span>&gt;</span>Home page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">nuxt-link</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span></code></pre><h2><a id=\"basic-routes\" class=\"anchor\" aria-hidden=\"true\" href=\"#basic-routes\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Basic Routes</h2><p>This file tree:</p>\n<pre><code class=\"hljs bash\">pages/\n--| user/\n-----| index.vue\n-----| one.vue\n--| index.vue</code></pre><p>will automatically generate:</p>\n<pre><code class=\"hljs js\">router: {\n  <span class=\"hljs-attr\">routes</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'index'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/index.vue'</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'user'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/user'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/user/index.vue'</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'user-one'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/user/one'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/user/one.vue'</span>\n    }\n  ]\n}</code></pre><h2><a id=\"dynamic-routes\" class=\"anchor\" aria-hidden=\"true\" href=\"#dynamic-routes\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Dynamic Routes</h2><p>To define a dynamic route with a parameter, you need to define a .vue file OR a directory <strong>prefixed by an underscore</strong>.</p>\n<div class=\"Promo__Video\">\n  <a href=\"https://vueschool.io/lessons/nuxtjs-dynamic-routes?friend=nuxt\" target=\"_blank\">\n    <p class=\"Promo__Video__Icon\">\n      Watch a free lesson about <strong>dynamic routes</strong> on Vue School \n    </p>\n  </a>\n</div>\n\n<p>This file tree:</p>\n<pre><code class=\"hljs bash\">pages/\n--| _slug/\n-----| comments.vue\n-----| index.vue\n--| users/\n-----| _id.vue\n--| index.vue</code></pre><p>will automatically generate:</p>\n<pre><code class=\"hljs js\">router: {\n  <span class=\"hljs-attr\">routes</span>: [\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'index'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/index.vue'</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'users-id'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/users/:id?'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/users/_id.vue'</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'slug'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/:slug'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_slug/index.vue'</span>\n    },\n    {\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'slug-comments'</span>,\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/:slug/comments'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_slug/comments.vue'</span>\n    }\n  ]\n}</code></pre><p>As you can see the route named <code>users-id</code> has the path <code>:id?</code> which makes it optional, if you want to make it required, create an <code>index.vue</code> file in the <code>users/_id</code> directory instead.</p>\n<div class=\"Alert Alert--orange\">\n\n<p><strong>Warning:</strong> dynamic routes are ignored by the <code>generate</code> command: <a href=\"/api/configuration-generate#routes\">API Configuration generate</a></p>\n</div>\n\n<h3><a id=\"validate-route-params\" class=\"anchor\" aria-hidden=\"true\" href=\"#validate-route-params\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Validate Route Params</h3><p>Nuxt.js lets you define a validator method inside your dynamic route component.</p>\n<p>In this example: <code>pages/users/_id.vue</code></p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  validate ({ params }) {\n    <span class=\"hljs-comment\">// Must be a number</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-regexp\">/^\\d+$/</span>.test(params.id)\n  }\n}</code></pre><p>If the validate method does not return <code>true</code> or a <code>Promise</code> that resolve to <code>true</code>, or throws an Error, Nuxt.js will automatically load the 404 error page or 500 error page in case of an error.</p>\n<p>More information about the validate method: <a href=\"/api/pages-validate\">API Pages validate</a></p>\n<h2><a id=\"nested-routes\" class=\"anchor\" aria-hidden=\"true\" href=\"#nested-routes\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Nested Routes</h2><p>Nuxt.js lets you create nested route by using the children routes of vue-router.</p>\n<p>To define the parent component of a nested route, you need to create a Vue file with the <strong>same name as the directory</strong> which contain your children views.</p>\n<div class=\"Alert Alert--orange\">\n\n<p><b>Warning:</b> don&#39;t forget to include <code>&lt;nuxt-child/&gt;</code> inside the parent component (<code>.vue</code> file).</p>\n</div>\n\n<p>This file tree:</p>\n<pre><code class=\"hljs bash\">pages/\n--| users/\n-----| _id.vue\n-----| index.vue\n--| users.vue</code></pre><p>will automatically generate:</p>\n<pre><code class=\"hljs js\">router: {\n  <span class=\"hljs-attr\">routes</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/users'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/users.vue'</span>,\n      <span class=\"hljs-attr\">children</span>: [\n        {\n          <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">''</span>,\n          <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/users/index.vue'</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'users'</span>\n        },\n        {\n          <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">':id'</span>,\n          <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/users/_id.vue'</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'users-id'</span>\n        }\n      ]\n    }\n  ]\n}</code></pre><h2><a id=\"dynamic-nested-routes\" class=\"anchor\" aria-hidden=\"true\" href=\"#dynamic-nested-routes\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Dynamic Nested Routes</h2><p>This scenario should not often happen, but it is possible with Nuxt.js: having dynamic children inside dynamic parents.</p>\n<p>This file tree:</p>\n<pre><code class=\"hljs bash\">pages/\n--| _category/\n-----| _subCategory/\n--------| _id.vue\n--------| index.vue\n-----| _subCategory.vue\n-----| index.vue\n--| _category.vue\n--| index.vue</code></pre><p>will automatically generate:</p>\n<pre><code class=\"hljs js\">router: {\n  <span class=\"hljs-attr\">routes</span>: [\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/index.vue'</span>,\n      <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'index'</span>\n    },\n    {\n      <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">'/:category'</span>,\n      <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_category.vue'</span>,\n      <span class=\"hljs-attr\">children</span>: [\n        {\n          <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">''</span>,\n          <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_category/index.vue'</span>,\n          <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'category'</span>\n        },\n        {\n          <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">':subCategory'</span>,\n          <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_category/_subCategory.vue'</span>,\n          <span class=\"hljs-attr\">children</span>: [\n            {\n              <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">''</span>,\n              <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_category/_subCategory/index.vue'</span>,\n              <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'category-subCategory'</span>\n            },\n            {\n              <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">':id'</span>,\n              <span class=\"hljs-attr\">component</span>: <span class=\"hljs-string\">'pages/_category/_subCategory/_id.vue'</span>,\n              <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'category-subCategory-id'</span>\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}</code></pre><h3><a id=\"unknown-dynamic-nested-routes\" class=\"anchor\" aria-hidden=\"true\" href=\"#unknown-dynamic-nested-routes\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Unknown Dynamic Nested Routes</h3><p>If you do not know the depth of your URL structure, you can use <code>_.vue</code> to dynamically match nested paths.\nThis will handle requests that do not match a <em>more specific</em> request.</p>\n<p>This file tree:</p>\n<pre><code class=\"hljs bash\">pages/\n--| people/\n-----| _id.vue\n-----| index.vue\n--| _.vue\n--| index.vue</code></pre><p>Will handle requests like this:</p>\n<table>\n<thead>\n<tr>\n<th>Path</th>\n<th>File</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>/</code></td>\n<td><code>index.vue</code></td>\n</tr>\n<tr>\n<td><code>/people</code></td>\n<td><code>people/index.vue</code></td>\n</tr>\n<tr>\n<td><code>/people/123</code></td>\n<td><code>people/_id.vue</code></td>\n</tr>\n<tr>\n<td><code>/about</code></td>\n<td><code>_.vue</code></td>\n</tr>\n<tr>\n<td><code>/about/careers</code></td>\n<td><code>_.vue</code></td>\n</tr>\n<tr>\n<td><code>/about/careers/chicago</code></td>\n<td><code>_.vue</code></td>\n</tr>\n</tbody></table>\n<p><strong>Note:</strong> Handling 404 pages is now up to the logic of the <code>_.vue</code> page. <a href=\"/guide/async-data#handling-errors\">More on 404 redirecting can be found here</a>.</p>\n<h3><a id=\"named-views\" class=\"anchor\" aria-hidden=\"true\" href=\"#named-views\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Named Views</h3><p>To render named views you can use <code>&lt;nuxt name=&quot;top&quot;/&gt;</code> or <code>&lt;nuxt-child name=&quot;top&quot;/&gt;</code> components in your layout/page. To specify named view of page we need to extend router config in <code>nuxt.config.js</code> file:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">router</span>: {\n    extendRoutes(routes, resolve) {\n      <span class=\"hljs-keyword\">let</span> index = routes.findIndex(<span class=\"hljs-function\"><span class=\"hljs-params\">route</span> =&gt;</span> route.name === <span class=\"hljs-string\">'main'</span>)\n      routes[index] = {\n        ...routes[index],\n        <span class=\"hljs-attr\">components</span>: {\n          <span class=\"hljs-attr\">default</span>: routes[index].component,\n          <span class=\"hljs-attr\">top</span>: resolve(__dirname, <span class=\"hljs-string\">'components/mainTop.vue'</span>)\n        },\n        <span class=\"hljs-attr\">chunkNames</span>: {\n          <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'components/mainTop'</span>\n        }\n      }\n    }\n  }\n}</code></pre><p>It require to extend interested route with 2 properties <code>components</code> and <code>chunkNames</code>. Named view in this config example has name <code>top</code>.</p>\n<p>To see an example, take a look at the <a href=\"/examples/named-views\">named-views example</a>.</p>\n<h3><a id=\"spa-fallback\" class=\"anchor\" aria-hidden=\"true\" href=\"#spa-fallback\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>SPA fallback</h3><p>You can enable SPA fallbacks for dynamic routes too. Nuxt.js will output an extra file that is the same as the <code>index.html</code> that would be used in <code>mode: &#39;spa&#39;</code>. Most static hosting services can be configured to use the SPA template if no file matches. It won&#39;t include the <code>head</code> info or any HTML, but it will still resolve and load the data from the API.</p>\n<p>We enable this in our <code>nuxt.config.js</code> file:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">generate</span>: {\n    <span class=\"hljs-attr\">fallback</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// if you want to use '404.html' instead of the default '200.html'</span>\n    fallback: <span class=\"hljs-string\">'my-fallback/file.html'</span> <span class=\"hljs-comment\">// if your hosting needs a custom location</span>\n  }\n}</code></pre><h4><a id=\"implementation-for-surge\" class=\"anchor\" aria-hidden=\"true\" href=\"#implementation-for-surge\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Implementation for Surge</h4><p>Surge <a href=\"https://surge.sh/help/adding-a-custom-404-not-found-page\">can handle</a> both <code>200.html</code> and <code>404.html</code>. <code>generate.fallback</code> is set to <code>200.html</code> by default, so no need to change it.</p>\n<h4><a id=\"implementation-for-github-pages-and-netlify\" class=\"anchor\" aria-hidden=\"true\" href=\"#implementation-for-github-pages-and-netlify\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Implementation for GitHub Pages and Netlify</h4><p>GitHub Pages and Netlify recognize the <code>404.html</code> file automatically, so setting <code>generate.fallback</code> to <code>true</code> is all we have to do!</p>\n<h4><a id=\"implementation-for-firebase-hosting\" class=\"anchor\" aria-hidden=\"true\" href=\"#implementation-for-firebase-hosting\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Implementation for Firebase Hosting</h4><p>To use the fallback on Firebase Hosting, configure <code>generate.fallback</code> to <code>true</code> and use the following config (<a href=\"https://firebase.google.com/docs/hosting/url-redirects-rewrites#section-rewrites\">more info</a>):</p>\n<pre><code class=\"hljs json\">{\n  <span class=\"hljs-attr\">\"hosting\"</span>: {\n    <span class=\"hljs-attr\">\"public\"</span>: <span class=\"hljs-string\">\"dist\"</span>,\n    <span class=\"hljs-attr\">\"ignore\"</span>: [\n      <span class=\"hljs-string\">\"firebase.json\"</span>,\n      <span class=\"hljs-string\">\"**/.*\"</span>,\n      <span class=\"hljs-string\">\"**/node_modules/**\"</span>\n    ],\n    <span class=\"hljs-attr\">\"rewrites\"</span>: [\n      {\n        <span class=\"hljs-attr\">\"source\"</span>: <span class=\"hljs-string\">\"**\"</span>,\n        <span class=\"hljs-attr\">\"destination\"</span>: <span class=\"hljs-string\">\"/404.html\"</span>\n      }\n    ]\n  }\n}</code></pre><h2><a id=\"transitions\" class=\"anchor\" aria-hidden=\"true\" href=\"#transitions\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Transitions</h2><p>Nuxt.js uses the <a href=\"http://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components\"><code>&lt;transition&gt;</code></a> component to let you create amazing transitions/animations between your routes.</p>\n<h3><a id=\"global-settings\" class=\"anchor\" aria-hidden=\"true\" href=\"#global-settings\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Global Settings</h3><div class=\"Alert Alert--nuxt-green\">\n\n<p><b>Info:</b> Nuxt.js default transition name is <code>&quot;page&quot;</code>.</p>\n</div>\n\n<p>To add a fade transition to every page of your application, we need a CSS file that is shared across all our routes, so we start by creating a file in the <code>assets</code> folder.</p>\n<p>Our global css in <code>assets/main.css</code>:</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.page-enter-active</span>, <span class=\"hljs-selector-class\">.page-leave-active</span> {\n  <span class=\"hljs-attribute\">transition</span>: opacity .<span class=\"hljs-number\">5s</span>;\n}\n<span class=\"hljs-selector-class\">.page-enter</span>, <span class=\"hljs-selector-class\">.page-leave-to</span> {\n  <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre><p>Then we add its path to the <code>css</code> array in our <code>nuxt.config.js</code> file:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">css</span>: [\n    <span class=\"hljs-string\">'~/assets/main.css'</span>\n  ]\n}</code></pre><p>More information about the transition key: <a href=\"/api/pages-transition\">API Configuration transition</a></p>\n<h3><a id=\"page-settings\" class=\"anchor\" aria-hidden=\"true\" href=\"#page-settings\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Page Settings</h3><p>You can also define a custom transition for a specific page with the <code>transition</code> property.</p>\n<p>We add a new class in our global css in <code>assets/main.css</code>:</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.test-enter-active</span>, <span class=\"hljs-selector-class\">.test-leave-active</span> {\n  <span class=\"hljs-attribute\">transition</span>: opacity .<span class=\"hljs-number\">5s</span>;\n}\n<span class=\"hljs-selector-class\">.test-enter</span>, <span class=\"hljs-selector-class\">.test-leave-active</span> {\n  <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre><p>Then we use the transition property to define the class name to use for this page transition:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">transition</span>: <span class=\"hljs-string\">'test'</span>\n}</code></pre><p>More information about the transition property: <a href=\"/api/pages-transition\">API Pages transition</a></p>\n<h2><a id=\"middleware\" class=\"anchor\" aria-hidden=\"true\" href=\"#middleware\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Middleware</h2><blockquote>\n<p>Middleware lets you define custom functions that can be run before rendering either a page or a group of pages.</p>\n</blockquote>\n<p><strong>Every middleware should be placed in the <code>middleware/</code> directory.</strong> The filename will be the name of the middleware (<code>middleware/auth.js</code> will be the <code>auth</code> middleware).</p>\n<p>A middleware receives <a href=\"/api/context\">the context</a> as first argument:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">context</span>) </span>{\n  context.userAgent = process.server ? context.req.headers[<span class=\"hljs-string\">'user-agent'</span>] : navigator.userAgent\n}</code></pre><p>In universal mode, middlewares will be called server-side once (on the first request to the Nuxt app or when page refreshes) and client-side when navigating to further routes.  In SPA mode, middlewares will be called client-side on the first request and when navigating to further routes. </p>\n<p>The middleware will be executed in series in this order:</p>\n<ol>\n<li><code>nuxt.config.js</code> (in the order within the file)</li>\n<li>Matched layouts</li>\n<li>Matched pages</li>\n</ol>\n<p>A middleware can be asynchronous. To do this, simply return a <code>Promise</code> or use the 2nd <code>callback</code> argument:</p>\n<p><code>middleware/stats.js</code></p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> axios <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'axios'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">{ route }</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> axios.post(<span class=\"hljs-string\">'http://my-stats-api.com'</span>, {\n    <span class=\"hljs-attr\">url</span>: route.fullPath\n  })\n}</code></pre><p>Then, in your <code>nuxt.config.js</code>, use the <code>router.middleware</code> key:</p>\n<p><code>nuxt.config.js</code></p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">router</span>: {\n    <span class=\"hljs-attr\">middleware</span>: <span class=\"hljs-string\">'stats'</span>\n  }\n}</code></pre><p>Now the <code>stats</code> middleware will be called for every route change.</p>\n<p>You can add your middleware to a specific layout or page as well:</p>\n<p><code>pages/index.vue</code> or <code>layouts/default.vue</code></p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">middleware</span>: <span class=\"hljs-string\">'stats'</span>\n}</code></pre><p>To see a real-life example using the middleware, please see <a href=\"https://github.com/nuxt/example-auth0\">example-auth0</a> on GitHub.</p>\n","docLink":"https://github.com/nuxt/docs/blob/master/en/guide/routing.md"}]