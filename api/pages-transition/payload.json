[{},{"attrs":{"title":"API: The transition Property","description":"Nuxt.js uses the `<transition>` component to let you create amazing transitions/animations between your pages."},"body":"<h1><a id=\"the-transition-property\" class=\"anchor\" aria-hidden=\"true\" href=\"#the-transition-property\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>The transition Property</h1><blockquote>\n<p>Nuxt.js uses the <a href=\"https://vuejs.org/v2/guide/transitions.html#Transitioning-Single-Elements-Components\"><code>&lt;transition&gt;</code></a> component to let you create amazing transitions/animations between your pages.</p>\n</blockquote>\n<ul>\n<li><strong>Type:</strong> <code>String</code> or <code>Object</code> or <code>Function</code></li>\n</ul>\n<p>To define a custom transition for a specific route, simply add the <code>transition</code> key to the page component.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-comment\">// Can be a String</span>\n  transition: <span class=\"hljs-string\">''</span>\n  <span class=\"hljs-comment\">// Or an Object</span>\n  transition: {}\n  <span class=\"hljs-comment\">// or a Function</span>\n  transition (to, <span class=\"hljs-keyword\">from</span>) {}\n}</code></pre><h2><a id=\"string\" class=\"anchor\" aria-hidden=\"true\" href=\"#string\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>String</h2><p>If the <code>transition</code> key is set as a string, it will be used as the <code>transition.name</code>.</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">transition</span>: <span class=\"hljs-string\">'test'</span>\n}</code></pre><p>Nuxt.js will use these settings to set the component as follows:</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transition</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"test\"</span>&gt;</span></code></pre><h2><a id=\"object\" class=\"anchor\" aria-hidden=\"true\" href=\"#object\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Object</h2><p>If the <code>transition</code> key is set as an object:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">transition</span>: {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'test'</span>,\n    <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'out-in'</span>\n  }\n}</code></pre><p>Nuxt.js will use these settings to set the component as follows:</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transition</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"test\"</span> <span class=\"hljs-attr\">mode</span>=<span class=\"hljs-string\">\"out-in\"</span>&gt;</span></code></pre><p>The <code>transition</code> object can have the following properties:</p>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th>Type</th>\n<th>Default</th>\n<th>definition</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>name</code></td>\n<td><code>String</code></td>\n<td><code>&quot;page&quot;</code></td>\n<td>The transition name applied on all the route transitions.</td>\n</tr>\n<tr>\n<td><code>mode</code></td>\n<td><code>String</code></td>\n<td><code>&quot;out-in&quot;</code></td>\n<td>The transition mode applied on all routes, see <a href=\"https://vuejs.org/v2/guide/transitions.html#Transition-Modes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>css</code></td>\n<td><code>Boolean</code></td>\n<td><code>true</code></td>\n<td>Whether to apply CSS transition classes. Defaults to <code>true</code>. If set to <code>false</code>, will only trigger JavaScript hooks registered via component events.</td>\n</tr>\n<tr>\n<td><code>duration</code></td>\n<td><code>Integer</code></td>\n<td>n/a</td>\n<td>The duration (in milliseconds) applied on the transition, see <a href=\"https://vuejs.org/v2/guide/transitions.html#Explicit-Transition-Durations\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>Specify the type of transition events to wait for to determine transition end timing. Available values are <code>&quot;transition&quot;</code> and <code>&quot;animation&quot;</code>. By default, it will automatically detect the type that has a longer duration.</td>\n</tr>\n<tr>\n<td><code>enterClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The starting state of the transition class. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>enterToClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The ending state for the transition. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>enterActiveClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The class applied across the entire transition duration. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>leaveClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The starting state of the transition class. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>leaveToClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The ending state for the transition. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n<tr>\n<td><code>leaveActiveClass</code></td>\n<td><code>String</code></td>\n<td>n/a</td>\n<td>The class applied across the entire transition duration. See <a href=\"https://vuejs.org/v2/guide/transitions.html#Custom-Transition-Classes\">Vue.js documentation</a>.</td>\n</tr>\n</tbody></table>\n<p>You can also define methods in the <code>transition</code>, these are for the <a href=\"https://vuejs.org/v2/guide/transitions.html#JavaScript-Hooks\">JavaScript hooks</a>:</p>\n<ul>\n<li><code>beforeEnter(el)</code></li>\n<li><code>enter(el, done)</code></li>\n<li><code>afterEnter(el)</code></li>\n<li><code>enterCancelled(el)</code></li>\n<li><code>beforeLeave(el)</code></li>\n<li><code>leave(el, done)</code></li>\n<li><code>afterLeave(el)</code></li>\n<li><code>leaveCancelled(el)</code></li>\n</ul>\n<p><em>Note: itâ€™s also a good idea to explicitly add <code>css: false</code> for JavaScript-only transitions so that Vue can skip the CSS detection. This also prevents CSS rules from accidentally interfering with the transition.</em></p>\n<h2><a id=\"function\" class=\"anchor\" aria-hidden=\"true\" href=\"#function\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>Function</h2><p>If the <code>transition</code> key is set as a function:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  transition (to, <span class=\"hljs-keyword\">from</span>) {\n    <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">from</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'slide-left'</span>\n    <span class=\"hljs-keyword\">return</span> +to.query.page &lt; +<span class=\"hljs-keyword\">from</span>.query.page ? <span class=\"hljs-string\">'slide-right'</span> : <span class=\"hljs-string\">'slide-left'</span>\n  }\n}</code></pre><p>Transitions applied on navigation:</p>\n<ul>\n<li><code>/</code> to <code>/posts</code> =&gt; <code>slide-left</code>,</li>\n<li><code>/posts</code> to <code>/posts?page=3</code> =&gt; <code>slide-left</code>,</li>\n<li><code>/posts?page=3</code> to <code>/posts?page=2</code> =&gt; <code>slide-right</code>.</li>\n</ul>\n","docLink":"https://github.com/nuxt/docs/blob/master/en/api/pages-transition.md"}]