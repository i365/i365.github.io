[{},{"attrs":{"title":"API: The modern Property","description":"Build and server a modern bundle"},"body":"<h1><a id=\"the-modern-property\" class=\"anchor\" aria-hidden=\"true\" href=\"#the-modern-property\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>The modern Property</h1><blockquote>\n<p>This feature is inspired by <a href=\"https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode\">vue-cli modern mode</a> </p>\n</blockquote>\n<ul>\n<li>Type: <code>String</code> or <code>Boolean</code><ul>\n<li>Default: false</li>\n<li>Possible values:<ul>\n<li><code>&#39;client&#39;</code>: Serve both, the modern bundle <code>&lt;script type=&quot;module&quot;&gt;</code> and the legacy bundle <code>&lt;script nomodule&gt;</code> scripts, also provide a <code>&lt;link rel=&quot;modulepreload&quot;&gt;</code> for the modern bundle. Every browser that understands the <code>module</code> type will load the modern bundle while older browsers fall back to the legacy (transpiled) one.</li>\n<li><code>&#39;server&#39;</code> or <code>true</code>: The Node.js server will check browser version based on the user agent and serve the corresponding modern or legacy bundle.</li>\n<li><code>false</code>: Disable modern build</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>The two versions of bundles are:</p>\n<ol>\n<li>Modern bundle: targeting modern browsers that support ES modules</li>\n<li>Legacy bundle: targeting older browsers based on babel config (IE9 compatible by default).</li>\n</ol>\n<p><strong>Info:</strong></p>\n<ul>\n<li>Use command option <code>[--modern | -m]=[mode]</code> to build/start modern bundles, for example: in <code>package.json</code>:</li>\n</ul>\n<pre><code class=\"hljs json\">{\n  <span class=\"hljs-attr\">\"scripts\"</span>: {\n    <span class=\"hljs-attr\">\"build:modern\"</span>: <span class=\"hljs-string\">\"nuxt build --modern=server\"</span>,\n    <span class=\"hljs-attr\">\"start:modern\"</span>: <span class=\"hljs-string\">\"nuxt start --modern=server\"</span>\n  }\n}</code></pre><p><strong>Note about <em>nuxt generate</em>:</strong> The <code>modern</code> property also works with the <code>nuxt generate</code> command, but in this case only the <code>client</code> option is honored and will be selected automatically when launching the <code>nuxt generate --modern</code> command without providing any values.</p>\n<ul>\n<li>Nuxt will automatically detect <code>modern</code> build in <code>nuxt start</code> when <code>modern</code> is not specified, auto-detected mode is:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th align=\"center\">Modern Mode</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>universal</td>\n<td align=\"center\">server</td>\n</tr>\n<tr>\n<td>spa</td>\n<td align=\"center\">client</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Modern mode for <code>nuxt generate</code> can only be <code>client</code></li>\n<li>Use <a href=\"/api/configuration-build#crossorigin\"><code>build.crossorigin</code></a> to set <code>crossorigin</code> attribute in <code>&lt;link&gt;</code> and <code>&lt;script&gt;</code></li>\n</ul>\n<blockquote>\n<p>Please refer <a href=\"https://philipwalton.com/articles/deploying-es2015-code-in-production-today/\">Phillip Walton&#39;s excellent post</a> for more knowledge regarding modern builds.</p>\n</blockquote>\n","docLink":"https://github.com/nuxt/docs/blob/master/en/api/configuration-modern.md"}]