[{},{"attrs":{"title":"API: nuxt.renderRoute(route, context)","description":"Render a specific route with a given context."},"body":"<h1><a id=\"nuxt-renderroute-route-context-\" class=\"anchor\" aria-hidden=\"true\" href=\"#nuxt-renderroute-route-context-\"><svg version=\"1.1\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"octicon octicon-link\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"/></svg></a>nuxt.renderRoute(route, context = {})</h1><ul>\n<li>Type: <code>Function</code></li>\n<li>Arguments:<ol>\n<li><code>String</code> : route to render</li>\n<li><em>Optional</em>, <code>Object</code>, context given, available keys: <code>req</code> &amp; <code>res</code></li>\n</ol>\n</li>\n<li>Returns: <code>Promise</code><ul>\n<li><code>html</code>: <code>String</code></li>\n<li><code>error</code>: <code>null</code> or <code>Object</code></li>\n<li><code>redirected</code>: <code>false</code> or <code>Object</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>Render a specific route with a given context.</p>\n</blockquote>\n<p>This method should be used mostly for <a href=\"/guide/development-tools#end-to-end-testing\">test purposes</a> as well with <a href=\"/api/nuxt-render-and-get-window\"><code>nuxt.renderAndGetWindow</code></a>.</p>\n<div class=\"Alert Alert--orange\">\n\n<p><code>nuxt.renderRoute</code> should be executed after the build process in production mode (<code>dev: false</code>).</p>\n</div>\n\n<p>Example:</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> { Nuxt, Builder } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nuxt'</span>)\n\n<span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./nuxt.config.js'</span>)\nconfig.dev = <span class=\"hljs-literal\">false</span>\n\n<span class=\"hljs-keyword\">const</span> nuxt = <span class=\"hljs-keyword\">new</span> Nuxt(config)\n\n<span class=\"hljs-keyword\">new</span> Builder(nuxt)\n.build()\n.then(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> nuxt.renderRoute(<span class=\"hljs-string\">'/'</span>))\n.then(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ html, error, redirected }</span>) =&gt;</span> {\n  <span class=\"hljs-comment\">// `html` will be always a string</span>\n\n  <span class=\"hljs-comment\">// `error` not null when the error layout is displayed, the error format is:</span>\n  <span class=\"hljs-comment\">// { statusCode: 500, message: 'My error message' }</span>\n\n  <span class=\"hljs-comment\">// `redirected` is not `false` when `redirect()` has been used in `asyncData()` or `fetch()`</span>\n  <span class=\"hljs-comment\">// { path: '/other-path', query: {}, status: 302 }</span>\n})</code></pre>","docLink":"https://github.com/nuxt/docs/blob/master/en/api/nuxt-render-route.md"}]