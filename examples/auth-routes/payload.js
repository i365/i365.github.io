window.__NUXT__=function(e,s,n,t,a,o,r,i,l,c,p,d,u,m,h,g,f,j,w,y,b,v,k,x,S,_,N,P,T,H,C,V,A,E,D,R,q,U,z,M,B){return{layout:"default",data:[{},{attrs:{title:j,description:"Authenticated routes example with Nuxt.js",github:"auth-routes",livedemo:"https://nuxt-auth-routes.gomix.me",liveedit:"https://gomix.com/#!/project/nuxt-auth-routes"},body:'<h1><a id="documentation" class="anchor" aria-hidden="true" href="#documentation"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Documentation</h1><blockquote>\n<p>Nuxt.js can be used to create authenticated routes easily.</p>\n</blockquote>\n<h2><a id="official-code-auth-module-code-" class="anchor" aria-hidden="true" href="#official-code-auth-module-code-"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Official <code>auth-module</code></h2><p>If you want to implement complex authentication flows, for example OAuth2, we suggest using the official <a href="https://github.com/nuxt-community/auth-module"><code>auth-module</code></a></p>\n<h2><a id="using-express-and-sessions" class="anchor" aria-hidden="true" href="#using-express-and-sessions"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Using Express and Sessions</h2><p>To add the sessions feature in our application, we will use <code>express</code> and <code>express-session</code>, for this, we need to use Nuxt.js programmatically.</p>\n<p>First, we install the dependencies:</p>\n<pre><code class="hljs bash">yarn add express express-session body-parser whatwg-fetch</code></pre><p><em>We will talk about <code>whatwg-fetch</code> later.</em></p>\n<p>Then we create our <code>server.js</code>:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">const</span> { Nuxt, Builder } = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'nuxt\'</span>)\n<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'body-parser\'</span>)\n<span class="hljs-keyword">const</span> session = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'express-session\'</span>)\n<span class="hljs-keyword">const</span> app = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'express\'</span>)()\n\n<span class="hljs-comment">// Body parser, to access `req.body`</span>\napp.use(bodyParser.json())\n\n<span class="hljs-comment">// Sessions to create `req.session`</span>\napp.use(session({\n  <span class="hljs-attr">secret</span>: <span class="hljs-string">\'super-secret-key\'</span>,\n  <span class="hljs-attr">resave</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">saveUninitialized</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">cookie</span>: { <span class="hljs-attr">maxAge</span>: <span class="hljs-number">60000</span> }\n}))\n\n<span class="hljs-comment">// POST `/api/login` to log in the user and add him to the `req.session.authUser`</span>\napp.post(<span class="hljs-string">\'/api/login\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>{\n  <span class="hljs-keyword">if</span> (req.body.username === <span class="hljs-string">\'demo\'</span> &amp;&amp; req.body.password === <span class="hljs-string">\'demo\'</span>) {\n    req.session.authUser = { <span class="hljs-attr">username</span>: <span class="hljs-string">\'demo\'</span> }\n    <span class="hljs-keyword">return</span> res.json({ <span class="hljs-attr">username</span>: <span class="hljs-string">\'demo\'</span> })\n  }\n  res.status(<span class="hljs-number">401</span>).json({ <span class="hljs-attr">error</span>: <span class="hljs-string">\'Bad credentials\'</span> })\n})\n\n<span class="hljs-comment">// POST `/api/logout` to log out the user and remove it from the `req.session`</span>\napp.post(<span class="hljs-string">\'/api/logout\'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>{\n  <span class="hljs-keyword">delete</span> req.session.authUser\n  res.json({ <span class="hljs-attr">ok</span>: <span class="hljs-literal">true</span> })\n})\n\n<span class="hljs-comment">// We instantiate Nuxt.js with the options</span>\n<span class="hljs-keyword">const</span> isProd = process.env.NODE_ENV === <span class="hljs-string">\'production\'</span>\n<span class="hljs-keyword">const</span> nuxt = <span class="hljs-keyword">new</span> Nuxt({ <span class="hljs-attr">dev</span>: !isProd })\n<span class="hljs-comment">// No build in production</span>\n<span class="hljs-keyword">if</span> (!isProd) {\n  <span class="hljs-keyword">const</span> builder = <span class="hljs-keyword">new</span> Builder(nuxt)\n  builder.build()\n}\napp.use(nuxt.render)\napp.listen(<span class="hljs-number">3000</span>)\n<span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'Server is listening on http://localhost:3000\'</span>)</code></pre><p>And we update our <code>package.json</code> scripts:</p>\n<pre><code class="hljs json">// ...\n"scripts": {\n  "dev": "node server.js",\n  "build": "nuxt build",\n  "start": "cross-env NODE_ENV=production node server.js"\n}\n// ...</code></pre><p>Note: You&#39;ll need to run <code>npm install --save-dev cross-env</code> for the above example to work. If you&#39;re <em>not</em> developing on Windows you can leave cross-env out of your <code>start</code> script and set <code>NODE_ENV</code> directly.</p>\n<h2><a id="using-the-store" class="anchor" aria-hidden="true" href="#using-the-store"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Using the store</h2><p>We need a global state to let our application know if the user is connected <strong>across the pages</strong>.</p>\n<p>To let Nuxt.js use Vuex, we create a <code>store/index.js</code> file:</p>\n<pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">\'vue\'</span>\n<span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">\'vuex\'</span>\n\nVue.use(Vuex)\n\n<span class="hljs-comment">// Polyfill for `window.fetch()`</span>\n<span class="hljs-built_in">require</span>(<span class="hljs-string">\'whatwg-fetch\'</span>)\n\n<span class="hljs-keyword">const</span> store = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-keyword">new</span> Vuex.Store({\n\n  <span class="hljs-attr">state</span>: <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> ({\n    <span class="hljs-attr">authUser</span>: <span class="hljs-literal">null</span>\n  }),\n\n  <span class="hljs-attr">mutations</span>: {\n    <span class="hljs-attr">SET_USER</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">state, user</span>) </span>{\n      state.authUser = user\n    }\n  },\n\n  <span class="hljs-attr">actions</span>: {\n    <span class="hljs-comment">// ...</span>\n  }\n\n})\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store</code></pre><ol>\n<li>We import <code>Vue</code> and <code>Vuex</code> (included in Nuxt.js) and we tell Vue to use Vuex to let us use <code>$store</code> in our components.</li>\n<li>We <code>require(&#39;whatwg-fetch&#39;)</code> to polyfill the <code>fetch()</code> method across all browsers (see <a href="https://github.com/github/fetch">fetch repo</a>).</li>\n<li>We create our <code>SET_USER</code> mutation which will set the <code>state.authUser</code> to the connected user.</li>\n<li>We export our store instance to Nuxt.js can inject it to our main application.</li>\n</ol>\n<h3><a id="nuxtserverinit-action" class="anchor" aria-hidden="true" href="#nuxtserverinit-action"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>nuxtServerInit() action</h3><p>Nuxt.js will call a specific action called <code>nuxtServerInit</code> with the context in argument, so when the app will be loaded, the store will be already filled with some data we can get from the server.</p>\n<p>In our <code>store/index.js</code>, we can add the <code>nuxtServerInit</code> action:</p>\n<pre><code class="hljs js">nuxtServerInit ({ commit }, { req }) {\n  <span class="hljs-keyword">if</span> (req.session &amp;&amp; req.session.authUser) {\n    commit(<span class="hljs-string">\'SET_USER\'</span>, req.session.authUser)\n  }\n}</code></pre><p>To make the data method asynchronous, Nuxt.js offers you different ways, choose the one you&#39;re the most familiar with:</p>\n<ol>\n<li>returning a <code>Promise</code>, Nuxt.js will wait for the promise to be resolved before rendering the component.</li>\n<li>Using the <a href="https://github.com/lukehoban/ecmascript-asyncawait"><code>async</code>/<code>await</code> proposal</a> (<a href="https://zeit.co/blog/async-and-await">learn more about it</a>).</li>\n</ol>\n<h3><a id="login-action" class="anchor" aria-hidden="true" href="#login-action"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>login() action</h3><p>We add a <code>login</code> action which will be called from our pages component to log in the user:</p>\n<pre><code class="hljs js">login ({ commit }, { username, password }) {\n  <span class="hljs-keyword">return</span> fetch(<span class="hljs-string">\'/api/login\'</span>, {\n    <span class="hljs-comment">// Send the client cookies to the server</span>\n    credentials: <span class="hljs-string">\'same-origin\'</span>,\n    <span class="hljs-attr">method</span>: <span class="hljs-string">\'POST\'</span>,\n    <span class="hljs-attr">headers</span>: {\n      <span class="hljs-string">\'Content-Type\'</span>: <span class="hljs-string">\'application/json\'</span>\n    },\n    <span class="hljs-attr">body</span>: <span class="hljs-built_in">JSON</span>.stringify({\n      username,\n      password\n    })\n  })\n  .then(<span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> {\n    <span class="hljs-keyword">if</span> (res.status === <span class="hljs-number">401</span>) {\n      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-string">\'Bad credentials\'</span>)\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-keyword">return</span> res.json()\n    }\n  })\n  .then(<span class="hljs-function">(<span class="hljs-params">authUser</span>) =&gt;</span> {\n    commit(<span class="hljs-string">\'SET_USER\'</span>, authUser)\n  })\n}</code></pre><h3><a id="logout-method" class="anchor" aria-hidden="true" href="#logout-method"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>logout() method</h3><pre><code class="hljs js">logout ({ commit }) {\n  <span class="hljs-keyword">return</span> fetch(<span class="hljs-string">\'/api/logout\'</span>, {\n    <span class="hljs-comment">// Send the client cookies to the server</span>\n    credentials: <span class="hljs-string">\'same-origin\'</span>,\n    <span class="hljs-attr">method</span>: <span class="hljs-string">\'POST\'</span>\n  })\n  .then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {\n    commit(<span class="hljs-string">\'SET_USER\'</span>, <span class="hljs-literal">null</span>)\n  })\n}</code></pre><h2><a id="pages-components" class="anchor" aria-hidden="true" href="#pages-components"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Pages components</h2><p>Then we can use <code>$store.state.authUser</code> in our pages components to check if the user is connected in our application or not.</p>\n<h3><a id="redirect-user-if-not-connected" class="anchor" aria-hidden="true" href="#redirect-user-if-not-connected"><svg version="1.1" width="16" height="16" viewBox="0 0 16 16" class="octicon octicon-link" aria-hidden="true"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"/></svg></a>Redirect user if not connected</h3><p>Let&#39;s add a <code>/secret</code> route where only the connected user can see its content:</p>\n<pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Super secret page<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">"/"</span>&gt;</span>Back to the home page<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-comment">// we use fetch() because we do not need to set data to this component</span>\n  fetch ({ store, redirect }) {\n    <span class="hljs-keyword">if</span> (!store.state.authUser) {\n      <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">\'/\'</span>)\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>We can see in the <code>fetch</code> method that we call <code>redirect(&#39;/&#39;)</code> when our user is not connected.</p>\n'}],error:null,state:{filled:e,docVersion:l,ghVersion:"v2.8.1",visibleHeader:!1,visibleAffix:!1,locale:"en",lang:{iso:"en",docVersion:l,links:{api:"API",blog:"Blog",chat:"Chat",documentation:"Documentation",download:"Download",examples:"Examples",ecosystem:"Ecosystem",faq:"FAQ",get_started:"get started",github:"GitHub",guide:"Guide",homepage:"Home page",live_demo:"Live Demo",live_edit:"Live Edit",tidelift_short:"GET PROFESSIONAL SUPPORT",official_support:"GET OFFICIAL SUPPORT ⛑",tidelift:"GET PROFESSIONAL SUPPORT FOR NUXT",twitter:"Twitter",vuejs:"Vue.js",vue_jobs:"Vue Jobs"},text:{an_error_occurred:"An error occurred",api_page_not_found:"API page not found",example_file:"Example Files",please_wait:"Please wait...",please_define_title:"Please define a title in the front matter",please_define_description:"Please define a description in the front matter",search:"Search",version:"Version"},homepage:{title:"The Vue.js Framework",meta:{title:"Nuxt.js - The Vue.js Framework",description:"Nuxt.js presets all the configuration needed to make your development of a Vue.js application enjoyable. Nuxt.js can produce Universal, Single Page and Static Generated Applications."},welcome:{app_types_prefix:"For ",app_types:["Universal Applications","Static Generated Applications","Single Page Applications","Desktop Applications","Mobile Applications","Progressive Web Apps"],app_types_suffix:"."},codesandbox_title:"Play with Nuxt.js online",codesandbox_open:"Open on CodeSandBox.io",codesandbox_examples:"See more examples",backer_partners:"Partners",backer_become_a_partner:"Become A Partner",backer_sponsors:_,backer_become_a_sponsor:"Become A Sponsor",backer_backers:"Backers",backer_become_a_backer:"Become A Backer",backer_foundations:"Foundations"},sponsors:{title:_,become:"Support us and",become_partner:"become a partner"},footer:{authors:"Made by Chopin Brothers"},guide:{release_notes:E,contribute:"Caught a mistake or want to contribute to the documentation?",edit_on_github:"Edit this page on GitHub!"},examples:{source_code:"Source Code"}},menu:{examples:[{title:"Essentials",links:[{name:D,to:""},{name:"SEO HTML Head",to:"/seo-html-head"}]},{title:"Customization",links:[{name:"Custom Loading",to:"/custom-loading"},{name:"Custom Page Loading",to:"/custom-page-loading"},{name:"Custom Routes",to:"/custom-routes"},{name:"Global CSS",to:"/global-css"},{name:c,to:"/layouts"},{name:p,to:"/middleware"},{name:d,to:"/named-views"},{name:u,to:"/nested-routes"},{name:m,to:h},{name:"Routes transitions",to:"/routes-transitions"}]},{title:"Advanced",links:[{name:g,to:f},{name:j,to:"/auth-routes"},{name:"Auth External API (JWT)",to:"/auth-external-jwt"},{name:t,to:w},{name:"i18n",to:"/i18n"},{name:"Testing",to:"/testing"}]},{title:"TypeScript",links:[{name:D,to:y},{name:t,to:"/typescript-vuex"}]}],api:[{title:"Essential",links:[{name:"Context",to:"/context"}]},{title:i,links:[{name:"asyncData",to:"/"},{name:"fetch",to:"/pages-fetch"},{name:v,to:"/pages-head"},{name:"key",to:"/pages-key"},{name:"layout",to:"/pages-layout"},{name:k,to:"/pages-loading"},{name:x,to:"/pages-middleware"},{name:"scrollToTop",to:"/pages-scrolltotop"},{name:S,to:"/pages-transition",contents:[{name:"String",to:"#string"},{name:"Object",to:"#object"},{name:"Function",to:"#function"}]},{name:"validate",to:"/pages-validate"},{name:"watchQuery",to:"/pages-watchquery"}]},{title:"Components",links:[{name:"nuxt",to:"/components-nuxt"},{name:"nuxt-child",to:"/components-nuxt-child"},{name:"nuxt-link",to:"/components-nuxt-link"},{name:"no-ssr",to:"/components-no-ssr"}]},{title:"Utils",links:[{name:"$nuxt",to:"/$nuxt"}]},{title:a,links:[{name:"build",to:"/configuration-build",contents:[{name:"analyze",to:"#analyze"},{name:"babel",to:"#babel"},{name:"cache",to:"#cache"},{name:"crossorigin",to:"#crossorigin"},{name:"cssSourceMap",to:"#csssourcemap"},{name:"devMiddleware",to:"#devmiddleware"},{name:N,to:P},{name:"extend",to:"#extend"},{name:"extractCSS",to:"#extractcss"},{name:"filenames",to:"#filenames"},{name:"friendlyErrors",to:"#friendlyerrors"},{name:"hardSource",to:"#hardsource"},{name:"hotMiddleware",to:"#hotmiddleware"},{name:"html.minify",to:"#html-minify"},{name:"indicator",to:"#indicator"},{name:"loaders",to:"#loaders"},{name:"optimization",to:"#optimization"},{name:"optimizeCSS",to:"#optimizecss"},{name:"parallel",to:"#parallel"},{name:T,to:"#plugins"},{name:"postcss",to:"#postcss"},{name:"profile",to:"#profile"},{name:"publicPath",to:"#publicpath"},{name:"quiet",to:"#quiet"},{name:"splitChunks",to:"#splitchunks"},{name:"ssr",to:C},{name:"styleResources",to:"#styleresources"},{name:"templates",to:"#templates"},{name:"terser",to:"#terser"},{name:"transpile",to:"#transpile"},{name:"typescript",to:"#typescript"},{name:"vueLoader",to:"#vueloader"},{name:V,to:"#watch"}]},{name:"buildDir",to:"/configuration-builddir"},{name:"css",to:"/configuration-css"},{name:"dev",to:"/configuration-dev"},{name:"env",to:"/configuration-env"},{name:"generate",to:"/configuration-generate",contents:[{name:"dir",to:"#dir"},{name:N,to:P},{name:o,to:r},{name:"interval",to:"#interval"},{name:"minify",to:"#minify"},{name:"routes",to:"#routes"},{name:"subFolders",to:"#subfolders"},{name:"concurrency",to:"#concurrency"}]},{name:v,to:"/configuration-head"},{name:"hooks",to:"/configuration-hooks"},{name:"ignore",to:"/configuration-ignore"},{name:k,to:"/configuration-loading",contents:[{name:"Disable the Progress Bar",to:"#disable-the-progress-bar"},{name:"Customize the Progress Bar",to:"#customize-the-progress-bar"},{name:"Use a Custom Loading Component",to:"#use-a-custom-loading-component"},{name:"Internals of the Progress Bar",to:"#internals-of-the-progress-bar"}]},{name:"loadingIndicator",to:"/configuration-loading-indicator"},{name:R,to:"/configuration-mode"},{name:"modern",to:"/configuration-modern"},{name:"modules",to:"/configuration-modules"},{name:"modulesDir",to:"/configuration-modulesdir"},{name:T,to:"/configuration-plugins"},{name:q,to:"/configuration-render",contents:[{name:"bundleRenderer",to:"#bundlerenderer"},{name:"etag",to:"#etag"},{name:"compressor",to:"#compressor"},{name:o,to:r},{name:"http2",to:"#http2"},{name:"injectScripts",to:"#injectscripts"},{name:"resourceHints",to:"#resourcehints"},{name:"ssr",to:C},{name:"ssrLog",to:"#ssrlog"},{name:"static",to:U},{name:"dist",to:"#dist"},{name:"csp",to:"#csp"}]},{name:"rootDir",to:"/configuration-rootdir"},{name:"router",to:"/configuration-router",contents:[{name:"base",to:"#base"},{name:"routeNameSplitter",to:"#routenamesplitter"},{name:"extendRoutes",to:"#extendroutes"},{name:o,to:r},{name:"linkActiveClass",to:"#linkactiveclass"},{name:"linkExactActiveClass",to:"#linkexactactiveclass"},{name:"linkPrefetchedClass",to:"#linkprefetchedclass"},{name:x,to:z},{name:R,to:"#mode"},{name:"parseQuery / stringifyQuery",to:"#parsequery-stringifyquery"},{name:"prefetchLinks",to:"#prefetchlinks"},{name:"scrollBehavior",to:"#scrollbehavior"}]},{name:"server",to:"/configuration-server"},{name:"serverMiddleware",to:"/configuration-servermiddleware"},{name:"srcDir",to:"/configuration-srcdir"},{name:"dir",to:"/configuration-dir"},{name:S,to:"/configuration-transition"},{name:"vue.config",to:"/configuration-vue-config"},{name:V,to:"/configuration-watch"},{name:"globalName",to:"/configuration-global-name"},{name:"watchers",to:"/configuration-watchers",contents:[{name:"chokidar",to:"#chokidar"},{name:"webpack",to:M}]}]},{title:"Programmatically",links:[{name:"Usage",to:"/nuxt"},{name:q,to:"/nuxt-render"},{name:"renderRoute",to:"/nuxt-render-route"},{name:"renderAndGetWindow",to:"/nuxt-render-and-get-window"}]},{title:"Internals",links:[{name:"Intro",to:"/internals"},{name:"Nuxt",to:"/internals-nuxt"},{name:"Renderer",to:"/internals-renderer"},{name:"Module Container",to:"/internals-module-container"},{name:"Builder",to:"/internals-builder"},{name:"Generator",to:"/internals-generator"}]}],faq:[{title:a,links:[{name:"How to use external resources?",to:""},{name:"How to use pre-processors?",to:"/pre-processors"},{name:"How to use JSX?",to:"/jsx"},{name:"How to add PostCSS plugins?",to:"/postcss-plugins"},{name:"How to extend webpack config?",to:"/extend-webpack"},{name:"How to add webpack plugins?",to:"/webpack-plugins"},{name:"How to edit HOST and PORT?",to:"/host-port"},{name:"How to use cached components?",to:"/cached-components"},{name:"How to use Google Analytics?",to:"/google-analytics"},{name:"How to share cross origin resource?",to:"/http-proxy"},{name:"How to extend Webpack config to load audio files?",to:"/webpack-audio-files"}]},{title:"Development",links:[{name:"window/document undefined?",to:"/window-document-undefined"},{name:"Why a CSS Flash appears?",to:"/css-flash"},{name:"Async data in components?",to:"/async-data-components"},{name:"Duplicated Meta Tags?",to:"/duplicated-meta-tags"},{name:"iOS and phone numbers",to:"/ios-phone-numbers"}]},{title:"Deployment",links:[{name:"Deploy on AWS w/ S3 and Cloudfront",to:"/deployment-aws-s3-cloudfront"},{name:"Deploy on Azure Portal",to:"/deployment-azure-portal"},{name:"Deploy on Dokku",to:"/dokku-deployment"},{name:"Deploy on GitHub",to:"/github-pages"},{name:"Deploy on Google App Engine",to:"/appengine-deployment"},{name:"Deploy on Heroku",to:"/heroku-deployment"},{name:"Deploy on Netlify",to:"/netlify-deployment"},{name:"Deploy on Now",to:"/now-deployment"},{name:"Deploy on Surge",to:"/surge-deployment"},{name:"Using nginx as a proxy",to:"/nginx-proxy"}]}],guide:[{title:"Prologue",links:[{to:"",name:B,contents:[{to:"#what-is-nuxt-js-",name:"What is Nuxt.js?"},{to:"#how-it-works",name:"How it Works"},{to:"#features",name:"Features"},{to:"#schema",name:"Schema"},{to:"#server-rendered-universal-ssr-",name:"Server Rendered"},{to:"#single-page-applications-spa-",name:"Single Page Application"},{to:"#static-generated-pre-rendering-",name:"Static Generated"}]},{to:"/contribution-guide",name:"Contribution Guide"},{to:"/release-notes",name:E}]},{title:"Getting Started",links:[{to:"/installation",name:"Installation",contents:[{to:"#using-nuxt-js-starter-template",name:"Using Nuxt.js starter template"},{to:"#starting-from-scratch",name:"Starting from scratch"}]},{to:"/directory-structure",name:"Directory Structure",contents:[{to:"#directories",name:"Directories"},{to:"#aliases",name:"Aliases"}]},{to:"/configuration",name:a},{to:"/routing",name:"Routing",contents:[{to:"#basic-routes",name:"Basic Routes"},{to:"#dynamic-routes",name:"Dynamic Routes"},{to:"#nested-routes",name:u},{to:"#dynamic-nested-routes",name:"Dynamic Nested Routes"},{to:"#named-views",name:d},{to:"#transitions",name:"Transitions"},{to:z,name:p}]},{to:"/views",name:"Views",contents:[{to:"#document",name:"Document"},{to:"#layouts",name:c},{to:"#pages",name:i},{to:"#html-head",name:"HTML Head"}]},{to:f,name:g,contents:[{to:"#the-asyncdata-method",name:"The asyncData Method"},{to:"#the-context",name:"The Context"},{to:"#handling-errors",name:"Handling Errors"}]},{to:"/assets",name:"Assets",contents:[{to:M,name:"Webpack"},{to:U,name:"Static"}]},{to:h,name:m,contents:[{to:"#external-packages",name:"External Packages"},{to:"#vue-plugins",name:"Vue Plugins"},{to:"#inject-in-root-amp-context",name:"Inject in $root & context"},{to:"#client-side-only",name:"Client-side only"}]},{to:"/modules",name:"Modules",contents:[{to:"#introduction",name:B},{to:"#list-of-nuxt-js-modules",name:"List of Nuxt.js modules"},{to:"#write-a-basic-module",name:"Write a basic Module"},{to:"#async-modules",name:"Async Modules"},{to:"#common-snippets",name:"Common Snippets"},{to:"#run-tasks-on-specific-hooks",name:"Run Tasks on Specific hooks"},{to:"#module-package-commands",name:"Module package commands"}]},{to:w,name:t,contents:[{to:"#activate-the-store",name:"Activate the Store"},{to:"#modules-mode",name:"Modules mode"},{to:"#the-fetch-method",name:"The fetch Method"},{to:"#the-nuxtserverinit-action",name:"The nuxtServerInit Action"},{to:"#classic-mode",name:"Classic mode"}]},{to:y,name:"TypeScript Support",contents:[{to:"#get-started",name:"Get started"},{to:"#from-javascript-to-typescript",name:"From JavaScript to TypeScript"},{to:"#linting-with-eslint",name:"Linting with ESLint"}]},{to:"/commands",name:"Commands and Deployment",contents:[{to:"#list-of-commands",name:"List of Commands"},{to:"#development-environment",name:"Development Enviroment"},{to:"#production-deployment",name:"Production Deployment"}]},{to:"/development-tools",name:"Development Tools",contents:[{to:"#end-to-end-testing",name:"End-to-End Testing"},{to:"#eslint-and-prettier",name:"ESLint and Prettier"}]}]}]},homepage:{index:{attrs:{fallback:e},body:""},backers:{attrs:{title:"Support the Team",fallback:e},body:"Nuxt.js is an MIT licensed open source project and completely free to use. However, the amount of effort needed to maintain and develop new features for the project is not sustainable without proper financial backing. Your donations directly support office hours, continued enhancements, and most importantly, great documentation and learning material.<br>"},modes_single_page_app:{attrs:{title:"Single Page App",content_title:"Single Page Application (SPA)",fallback:e},body:"Don&#39;t need SSR or Static Site Generation but still want to profit from the benefits that Nuxt provides?\nAre you slowly transitioning your app and want to start lightweight? Then the traditional SPA mode will\nlikely be your choice.\nThe outcome will be a typical Vue SPA as you know it but influenced by your Nuxt configuration and the\nframework itself.<br>"},modes_server_side_rendering:{attrs:{title:"Server Side Rendered",content_title:"Server Side Rendered (Universal)",fallback:e},body:"The most popular mode for Nuxt. With SSR, also called &quot;universal&quot; or &quot;isomorphic&quot; mode, a Node.js server\nwill be used to deliver HTML based on your Vue components to the client instead of the pure javascript.\nUsing SSR will lead to a large SEO boost, better UX and more opportunities (compared to a traditional Vue SPA).<br><br>\nBecause implementing SSR on your own can be really tedious, Nuxt.js gives you full support out of the box\nand will take care of common pitfalls.<br>"},modes_statically_generated:{attrs:{title:"Statically Generated",content_title:"Statically Generated (Pre-Rendering)",fallback:e},body:'Static Site Generation is a very hot topic right now! Instead of switching to another framework and\nspending time to get used to it, why not killing two birds with one stone?\n<span style="color: #777">(only proverbial 🐦🐦)</span><br><br>\nNuxt.js supports generating a static website based on your Vue application. It is the &quot;best of both worlds&quot;\nas you don&#39;t need a server but still have SEO benefits because Nuxt will pre-render all pages and include\nthe necessary HTML. Also, you can deploy the resulting page easily to Netlify or GitHub pages.<br>'},modes:{attrs:{title:"Rendering modes",fallback:e},body:"NO CONTENTS<br>"},welcome_figure:{attrs:{title:"Welcome figure - video",fallback:e},body:'Video produced by <a href="https://www.vuemastery.com" target="_blank" rel="noopener">Vue Mastery</a>, download their free <a href="https://www.vuemastery.com/nuxt-cheat-sheet/" target="_blank" rel="noopener">Nuxt Cheat Sheet</a>.<br>'},welcome:{attrs:{title:'The <span class="nWelcome_Content_Title_Primary">Vue.js</span> Framework',fallback:e},body:"Nuxt.js presets all the configuration needed to make your development of a Vue.js application enjoyable.<br>"},why_modular:{attrs:{title:"Modular",fallback:e},body:"Nuxt is based on a powerful modular architecture. You can choose from more than 50 modules to make your development faster and easier. You don&#39;t have to reinvent the wheel to get PWA benefits, add Google Analytics to your page or generate a sitemap.<br>"},why_enjoyable:{attrs:{title:"Enjoyable",fallback:e},body:"Our main focus is the Developer Experience. We love Nuxt.js and continuously improve the framework so you love it too! 💚<br>Expect appealing solutions, descriptive error messages, powerful defaults and detailed documentation. If questions or problems come up, our helpful community will help you out.<br>"},why_performant:{attrs:{title:"Performant",fallback:e},body:"With Nuxt.js, your application will be optimized out of the box.\nWe do our best to build performant applications by utilizing Vue.js and Node.js best practices.\nTo squeeze every unnecessary bit out of your app Nuxt includes a bundle analyzer and lots of opportunities to fine-tune your app.<br>"},why:{attrs:{title:"Why Nuxt?",fallback:e},body:""}},adBlocked:!1},serverRendered:e}}(!0,0,0,"Vuex Store","Configuration","fallback","#fallback","Pages","2.8.X","Layouts","Middleware","Named Views","Nested Routes","Plugins","/plugins","Async Data","/async-data","Auth Routes","/vuex-store","/typescript",0,"head","loading","middleware","transition","Sponsors","devtools","#devtools","plugins",0,"#ssr","watch",0,"Release Notes","Hello World","mode","render","#static","#middleware","#webpack","Introduction")